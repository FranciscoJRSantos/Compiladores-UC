Terminals unused in grammar

   RESERVED


Grammar

    0 $accept: Program $end

    1 Program: FunctionsAndDeclarations

    2 FunctionsAndDeclarations: FunctionDefinition
    3                         | FunctionDeclaration
    4                         | Declaration
    5                         | FunctionDefinition FunctionsAndDeclarations
    6                         | FunctionDeclaration FunctionsAndDeclarations
    7                         | Declaration FunctionsAndDeclarations

    8 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

    9 FunctionBody: LBRACE RBRACE
   10             | LBRACE DeclarationsAndStatements RBRACE

   11 DeclarationsAndStatements: Statement DeclarationsAndStatements
   12                          | Declaration DeclarationsAndStatements
   13                          | Statement
   14                          | Declaration

   15 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI

   16 FunctionDeclarator: ID LPAR ParameterList RPAR

   17 ParameterList: ParameterDeclaration ParameterDeclaration_

   18 ParameterDeclaration_: ParameterDeclaration_ COMMA ParameterDeclaration
   19                      | empty

   20 ParameterDeclaration: TypeSpec
   21                     | TypeSpec ID

   22 Declaration: TypeSpec Declarator Declarator_ SEMI
   23            | error SEMI

   24 Declarator_: Declarator_ COMMA Declarator
   25            | empty

   26 Declarator: ID ASSIGN AssignExpr
   27           | ID

   28 TypeSpec: CHAR
   29         | INT
   30         | VOID
   31         | SHORT
   32         | DOUBLE

   33 StatementError: error SEMI
   34               | Statement

   35 Statement: Compound_Stm
   36          | Expr_Stm
   37          | Select_Stm
   38          | Iter_Stm
   39          | Jump_Stm

   40 Compound_Stm: LBRACE RBRACE
   41             | LBRACE BlockItemStm RBRACE
   42             | LBRACE error RBRACE

   43 BlockItemStm: StatementError BlockItemStm
   44             | StatementError

   45 Expr_Stm: OptionalExpr SEMI

   46 OptionalExpr: empty
   47             | Expr

   48 Select_Stm: IF LPAR Expr RPAR StatementError
   49           | IF LPAR Expr RPAR StatementError ELSE StatementError

   50 Iter_Stm: WHILE LPAR Expr RPAR StatementError

   51 Jump_Stm: RETURN OptionalExpr SEMI

   52 PrimaryExpr: ID
   53            | INTLIT
   54            | CHRLIT
   55            | REALLIT
   56            | LPAR Expr RPAR
   57            | LPAR error RPAR

   58 ArgExpr: AssignExpr
   59        | ArgExpr COMMA AssignExpr

   60 FunctionCallExpr: PrimaryExpr
   61                 | ID LPAR ArgExpr RPAR
   62                 | ID LPAR RPAR
   63                 | ID LPAR error RPAR

   64 UnaryExpr: FunctionCallExpr
   65          | PLUS UnaryExpr
   66          | MINUS UnaryExpr
   67          | NOT UnaryExpr

   68 MultiplicativeExpr: UnaryExpr
   69                   | MultiplicativeExpr MUL UnaryExpr
   70                   | MultiplicativeExpr DIV UnaryExpr
   71                   | MultiplicativeExpr MOD UnaryExpr

   72 AdditiveExpr: MultiplicativeExpr
   73             | AdditiveExpr PLUS MultiplicativeExpr
   74             | AdditiveExpr MINUS MultiplicativeExpr

   75 RelationalExpr: AdditiveExpr
   76               | RelationalExpr LT AdditiveExpr
   77               | RelationalExpr GT AdditiveExpr
   78               | RelationalExpr LE AdditiveExpr
   79               | RelationalExpr GE AdditiveExpr

   80 EqualExpr: RelationalExpr
   81          | EqualExpr EQ RelationalExpr
   82          | EqualExpr NE RelationalExpr

   83 AndExpr: EqualExpr
   84        | AndExpr BITWISEAND EqualExpr

   85 ExclusiveOrExpr: AndExpr
   86                | ExclusiveOrExpr BITWISEXOR AndExpr

   87 InclusiveOrExpr: ExclusiveOrExpr
   88                | InclusiveOrExpr BITWISEOR ExclusiveOrExpr

   89 LogicalAndExpr: InclusiveOrExpr
   90               | LogicalAndExpr AND InclusiveOrExpr

   91 LogicalOrExpr: LogicalAndExpr
   92              | LogicalOrExpr OR LogicalAndExpr

   93 AssignExpr: LogicalOrExpr
   94           | LogicalOrExpr ASSIGN AssignExpr

   95 Expr: AssignExpr
   96     | Expr COMMA AssignExpr

   97 empty: %empty


Terminals, with rules where they appear

$end (0) 0
error (256) 23 33 42 57 63
CHAR (258) 28
ELSE (259) 49
WHILE (260) 50
IF (261) 48 49
INT (262) 29
SHORT (263) 31
DOUBLE (264) 32
RETURN (265) 51
VOID (266) 30
BITWISEAND (267) 84
BITWISEOR (268) 88
BITWISEXOR (269) 86
AND (270) 90
ASSIGN (271) 26 94
MUL (272) 69
COMMA (273) 18 24 59 96
DIV (274) 70
EQ (275) 81
GE (276) 79
GT (277) 77
LBRACE (278) 9 10 40 41 42
LE (279) 78
LPAR (280) 16 48 49 50 56 57 61 62 63
LT (281) 76
MINUS (282) 66 74
MOD (283) 71
NE (284) 82
NOT (285) 67
OR (286) 92
PLUS (287) 65 73
RBRACE (288) 9 10 40 41 42
RPAR (289) 16 48 49 50 56 57 61 62 63
SEMI (290) 15 22 23 33 45 51
ID (291) 16 21 26 27 52 61 62 63
CHRLIT (292) 54
REALLIT (293) 55
RESERVED (294)
INTLIT (295) 53
IFS (296)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
Program (43)
    on left: 1, on right: 0
FunctionsAndDeclarations (44)
    on left: 2 3 4 5 6 7, on right: 1 5 6 7
FunctionDefinition (45)
    on left: 8, on right: 2 5
FunctionBody (46)
    on left: 9 10, on right: 8
DeclarationsAndStatements (47)
    on left: 11 12 13 14, on right: 10 11 12
FunctionDeclaration (48)
    on left: 15, on right: 3 6
FunctionDeclarator (49)
    on left: 16, on right: 8 15
ParameterList (50)
    on left: 17, on right: 16
ParameterDeclaration_ (51)
    on left: 18 19, on right: 17 18
ParameterDeclaration (52)
    on left: 20 21, on right: 17 18
Declaration (53)
    on left: 22 23, on right: 4 7 12 14
Declarator_ (54)
    on left: 24 25, on right: 22 24
Declarator (55)
    on left: 26 27, on right: 22 24
TypeSpec (56)
    on left: 28 29 30 31 32, on right: 8 15 20 21 22
StatementError (57)
    on left: 33 34, on right: 43 44 48 49 50
Statement (58)
    on left: 35 36 37 38 39, on right: 11 13 34
Compound_Stm (59)
    on left: 40 41 42, on right: 35
BlockItemStm (60)
    on left: 43 44, on right: 41 43
Expr_Stm (61)
    on left: 45, on right: 36
OptionalExpr (62)
    on left: 46 47, on right: 45 51
Select_Stm (63)
    on left: 48 49, on right: 37
Iter_Stm (64)
    on left: 50, on right: 38
Jump_Stm (65)
    on left: 51, on right: 39
PrimaryExpr (66)
    on left: 52 53 54 55 56 57, on right: 60
ArgExpr (67)
    on left: 58 59, on right: 59 61
FunctionCallExpr (68)
    on left: 60 61 62 63, on right: 64
UnaryExpr (69)
    on left: 64 65 66 67, on right: 65 66 67 68 69 70 71
MultiplicativeExpr (70)
    on left: 68 69 70 71, on right: 69 70 71 72 73 74
AdditiveExpr (71)
    on left: 72 73 74, on right: 73 74 75 76 77 78 79
RelationalExpr (72)
    on left: 75 76 77 78 79, on right: 76 77 78 79 80 81 82
EqualExpr (73)
    on left: 80 81 82, on right: 81 82 83 84
AndExpr (74)
    on left: 83 84, on right: 84 85 86
ExclusiveOrExpr (75)
    on left: 85 86, on right: 86 87 88
InclusiveOrExpr (76)
    on left: 87 88, on right: 88 89 90
LogicalAndExpr (77)
    on left: 89 90, on right: 90 91 92
LogicalOrExpr (78)
    on left: 91 92, on right: 92 93 94
AssignExpr (79)
    on left: 93 94, on right: 26 58 59 94 95 96
Expr (80)
    on left: 95 96, on right: 47 48 49 50 56 96
empty (81)
    on left: 97, on right: 19 25 46


State 0

    0 $accept: . Program $end

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    Program                   go to state 7
    FunctionsAndDeclarations  go to state 8
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 1

   23 Declaration: error . SEMI

    SEMI  shift, and go to state 13


State 2

   28 TypeSpec: CHAR .

    $default  reduce using rule 28 (TypeSpec)


State 3

   29 TypeSpec: INT .

    $default  reduce using rule 29 (TypeSpec)


State 4

   31 TypeSpec: SHORT .

    $default  reduce using rule 31 (TypeSpec)


State 5

   32 TypeSpec: DOUBLE .

    $default  reduce using rule 32 (TypeSpec)


State 6

   30 TypeSpec: VOID .

    $default  reduce using rule 30 (TypeSpec)


State 7

    0 $accept: Program . $end

    $end  shift, and go to state 14


State 8

    1 Program: FunctionsAndDeclarations .

    $default  reduce using rule 1 (Program)


State 9

    2 FunctionsAndDeclarations: FunctionDefinition .
    5                         | FunctionDefinition . FunctionsAndDeclarations

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 2 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 15
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 10

    3 FunctionsAndDeclarations: FunctionDeclaration .
    6                         | FunctionDeclaration . FunctionsAndDeclarations

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 3 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 16
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 11

    4 FunctionsAndDeclarations: Declaration .
    7                         | Declaration . FunctionsAndDeclarations

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 4 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 17
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 12

    8 FunctionDefinition: TypeSpec . FunctionDeclarator FunctionBody
   15 FunctionDeclaration: TypeSpec . FunctionDeclarator SEMI
   22 Declaration: TypeSpec . Declarator Declarator_ SEMI

    ID  shift, and go to state 18

    FunctionDeclarator  go to state 19
    Declarator          go to state 20


State 13

   23 Declaration: error SEMI .

    $default  reduce using rule 23 (Declaration)


State 14

    0 $accept: Program $end .

    $default  accept


State 15

    5 FunctionsAndDeclarations: FunctionDefinition FunctionsAndDeclarations .

    $default  reduce using rule 5 (FunctionsAndDeclarations)


State 16

    6 FunctionsAndDeclarations: FunctionDeclaration FunctionsAndDeclarations .

    $default  reduce using rule 6 (FunctionsAndDeclarations)


State 17

    7 FunctionsAndDeclarations: Declaration FunctionsAndDeclarations .

    $default  reduce using rule 7 (FunctionsAndDeclarations)


State 18

   16 FunctionDeclarator: ID . LPAR ParameterList RPAR
   26 Declarator: ID . ASSIGN AssignExpr
   27           | ID .

    ASSIGN  shift, and go to state 21
    LPAR    shift, and go to state 22

    $default  reduce using rule 27 (Declarator)


State 19

    8 FunctionDefinition: TypeSpec FunctionDeclarator . FunctionBody
   15 FunctionDeclaration: TypeSpec FunctionDeclarator . SEMI

    LBRACE  shift, and go to state 23
    SEMI    shift, and go to state 24

    FunctionBody  go to state 25


State 20

   22 Declaration: TypeSpec Declarator . Declarator_ SEMI

    $default  reduce using rule 97 (empty)

    Declarator_  go to state 26
    empty        go to state 27


State 21

   26 Declarator: ID ASSIGN . AssignExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 48


State 22

   16 FunctionDeclarator: ID LPAR . ParameterList RPAR

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    ParameterList         go to state 49
    ParameterDeclaration  go to state 50
    TypeSpec              go to state 51


State 23

    9 FunctionBody: LBRACE . RBRACE
   10             | LBRACE . DeclarationsAndStatements RBRACE

    error    shift, and go to state 1
    CHAR     shift, and go to state 2
    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    INT      shift, and go to state 3
    SHORT    shift, and go to state 4
    DOUBLE   shift, and go to state 5
    RETURN   shift, and go to state 54
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    RBRACE   shift, and go to state 56
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    SEMI  reduce using rule 97 (empty)

    DeclarationsAndStatements  go to state 57
    Declaration                go to state 58
    TypeSpec                   go to state 59
    Statement                  go to state 60
    Compound_Stm               go to state 61
    Expr_Stm                   go to state 62
    OptionalExpr               go to state 63
    Select_Stm                 go to state 64
    Iter_Stm                   go to state 65
    Jump_Stm                   go to state 66
    PrimaryExpr                go to state 36
    FunctionCallExpr           go to state 37
    UnaryExpr                  go to state 38
    MultiplicativeExpr         go to state 39
    AdditiveExpr               go to state 40
    RelationalExpr             go to state 41
    EqualExpr                  go to state 42
    AndExpr                    go to state 43
    ExclusiveOrExpr            go to state 44
    InclusiveOrExpr            go to state 45
    LogicalAndExpr             go to state 46
    LogicalOrExpr              go to state 47
    AssignExpr                 go to state 67
    Expr                       go to state 68
    empty                      go to state 69


State 24

   15 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI .

    $default  reduce using rule 15 (FunctionDeclaration)


State 25

    8 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody .

    $default  reduce using rule 8 (FunctionDefinition)


State 26

   22 Declaration: TypeSpec Declarator Declarator_ . SEMI
   24 Declarator_: Declarator_ . COMMA Declarator

    COMMA  shift, and go to state 70
    SEMI   shift, and go to state 71


State 27

   25 Declarator_: empty .

    $default  reduce using rule 25 (Declarator_)


State 28

   56 PrimaryExpr: LPAR . Expr RPAR
   57            | LPAR . error RPAR

    error    shift, and go to state 72
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 73


State 29

   66 UnaryExpr: MINUS . UnaryExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr       go to state 36
    FunctionCallExpr  go to state 37
    UnaryExpr         go to state 74


State 30

   67 UnaryExpr: NOT . UnaryExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr       go to state 36
    FunctionCallExpr  go to state 37
    UnaryExpr         go to state 75


State 31

   65 UnaryExpr: PLUS . UnaryExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr       go to state 36
    FunctionCallExpr  go to state 37
    UnaryExpr         go to state 76


State 32

   52 PrimaryExpr: ID .
   61 FunctionCallExpr: ID . LPAR ArgExpr RPAR
   62                 | ID . LPAR RPAR
   63                 | ID . LPAR error RPAR

    LPAR  shift, and go to state 77

    $default  reduce using rule 52 (PrimaryExpr)


State 33

   54 PrimaryExpr: CHRLIT .

    $default  reduce using rule 54 (PrimaryExpr)


State 34

   55 PrimaryExpr: REALLIT .

    $default  reduce using rule 55 (PrimaryExpr)


State 35

   53 PrimaryExpr: INTLIT .

    $default  reduce using rule 53 (PrimaryExpr)


State 36

   60 FunctionCallExpr: PrimaryExpr .

    $default  reduce using rule 60 (FunctionCallExpr)


State 37

   64 UnaryExpr: FunctionCallExpr .

    $default  reduce using rule 64 (UnaryExpr)


State 38

   68 MultiplicativeExpr: UnaryExpr .

    $default  reduce using rule 68 (MultiplicativeExpr)


State 39

   69 MultiplicativeExpr: MultiplicativeExpr . MUL UnaryExpr
   70                   | MultiplicativeExpr . DIV UnaryExpr
   71                   | MultiplicativeExpr . MOD UnaryExpr
   72 AdditiveExpr: MultiplicativeExpr .

    MUL  shift, and go to state 78
    DIV  shift, and go to state 79
    MOD  shift, and go to state 80

    $default  reduce using rule 72 (AdditiveExpr)


State 40

   73 AdditiveExpr: AdditiveExpr . PLUS MultiplicativeExpr
   74             | AdditiveExpr . MINUS MultiplicativeExpr
   75 RelationalExpr: AdditiveExpr .

    MINUS  shift, and go to state 81
    PLUS   shift, and go to state 82

    $default  reduce using rule 75 (RelationalExpr)


State 41

   76 RelationalExpr: RelationalExpr . LT AdditiveExpr
   77               | RelationalExpr . GT AdditiveExpr
   78               | RelationalExpr . LE AdditiveExpr
   79               | RelationalExpr . GE AdditiveExpr
   80 EqualExpr: RelationalExpr .

    GE  shift, and go to state 83
    GT  shift, and go to state 84
    LE  shift, and go to state 85
    LT  shift, and go to state 86

    $default  reduce using rule 80 (EqualExpr)


State 42

   81 EqualExpr: EqualExpr . EQ RelationalExpr
   82          | EqualExpr . NE RelationalExpr
   83 AndExpr: EqualExpr .

    EQ  shift, and go to state 87
    NE  shift, and go to state 88

    $default  reduce using rule 83 (AndExpr)


State 43

   84 AndExpr: AndExpr . BITWISEAND EqualExpr
   85 ExclusiveOrExpr: AndExpr .

    BITWISEAND  shift, and go to state 89

    $default  reduce using rule 85 (ExclusiveOrExpr)


State 44

   86 ExclusiveOrExpr: ExclusiveOrExpr . BITWISEXOR AndExpr
   87 InclusiveOrExpr: ExclusiveOrExpr .

    BITWISEXOR  shift, and go to state 90

    $default  reduce using rule 87 (InclusiveOrExpr)


State 45

   88 InclusiveOrExpr: InclusiveOrExpr . BITWISEOR ExclusiveOrExpr
   89 LogicalAndExpr: InclusiveOrExpr .

    BITWISEOR  shift, and go to state 91

    $default  reduce using rule 89 (LogicalAndExpr)


State 46

   90 LogicalAndExpr: LogicalAndExpr . AND InclusiveOrExpr
   91 LogicalOrExpr: LogicalAndExpr .

    AND  shift, and go to state 92

    $default  reduce using rule 91 (LogicalOrExpr)


State 47

   92 LogicalOrExpr: LogicalOrExpr . OR LogicalAndExpr
   93 AssignExpr: LogicalOrExpr .
   94           | LogicalOrExpr . ASSIGN AssignExpr

    ASSIGN  shift, and go to state 93
    OR      shift, and go to state 94

    $default  reduce using rule 93 (AssignExpr)


State 48

   26 Declarator: ID ASSIGN AssignExpr .

    $default  reduce using rule 26 (Declarator)


State 49

   16 FunctionDeclarator: ID LPAR ParameterList . RPAR

    RPAR  shift, and go to state 95


State 50

   17 ParameterList: ParameterDeclaration . ParameterDeclaration_

    $default  reduce using rule 97 (empty)

    ParameterDeclaration_  go to state 96
    empty                  go to state 97


State 51

   20 ParameterDeclaration: TypeSpec .
   21                     | TypeSpec . ID

    ID  shift, and go to state 98

    $default  reduce using rule 20 (ParameterDeclaration)


State 52

   50 Iter_Stm: WHILE . LPAR Expr RPAR StatementError

    LPAR  shift, and go to state 99


State 53

   48 Select_Stm: IF . LPAR Expr RPAR StatementError
   49           | IF . LPAR Expr RPAR StatementError ELSE StatementError

    LPAR  shift, and go to state 100


State 54

   51 Jump_Stm: RETURN . OptionalExpr SEMI

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    $default  reduce using rule 97 (empty)

    OptionalExpr        go to state 101
    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 68
    empty               go to state 69


State 55

   40 Compound_Stm: LBRACE . RBRACE
   41             | LBRACE . BlockItemStm RBRACE
   42             | LBRACE . error RBRACE

    error    shift, and go to state 102
    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    RETURN   shift, and go to state 54
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    RBRACE   shift, and go to state 103
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    SEMI  reduce using rule 97 (empty)

    StatementError      go to state 104
    Statement           go to state 105
    Compound_Stm        go to state 61
    BlockItemStm        go to state 106
    Expr_Stm            go to state 62
    OptionalExpr        go to state 63
    Select_Stm          go to state 64
    Iter_Stm            go to state 65
    Jump_Stm            go to state 66
    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 68
    empty               go to state 69


State 56

    9 FunctionBody: LBRACE RBRACE .

    $default  reduce using rule 9 (FunctionBody)


State 57

   10 FunctionBody: LBRACE DeclarationsAndStatements . RBRACE

    RBRACE  shift, and go to state 107


State 58

   12 DeclarationsAndStatements: Declaration . DeclarationsAndStatements
   14                          | Declaration .

    error    shift, and go to state 1
    CHAR     shift, and go to state 2
    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    INT      shift, and go to state 3
    SHORT    shift, and go to state 4
    DOUBLE   shift, and go to state 5
    RETURN   shift, and go to state 54
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    RBRACE  reduce using rule 14 (DeclarationsAndStatements)
    SEMI    reduce using rule 97 (empty)

    DeclarationsAndStatements  go to state 108
    Declaration                go to state 58
    TypeSpec                   go to state 59
    Statement                  go to state 60
    Compound_Stm               go to state 61
    Expr_Stm                   go to state 62
    OptionalExpr               go to state 63
    Select_Stm                 go to state 64
    Iter_Stm                   go to state 65
    Jump_Stm                   go to state 66
    PrimaryExpr                go to state 36
    FunctionCallExpr           go to state 37
    UnaryExpr                  go to state 38
    MultiplicativeExpr         go to state 39
    AdditiveExpr               go to state 40
    RelationalExpr             go to state 41
    EqualExpr                  go to state 42
    AndExpr                    go to state 43
    ExclusiveOrExpr            go to state 44
    InclusiveOrExpr            go to state 45
    LogicalAndExpr             go to state 46
    LogicalOrExpr              go to state 47
    AssignExpr                 go to state 67
    Expr                       go to state 68
    empty                      go to state 69


State 59

   22 Declaration: TypeSpec . Declarator Declarator_ SEMI

    ID  shift, and go to state 109

    Declarator  go to state 20


State 60

   11 DeclarationsAndStatements: Statement . DeclarationsAndStatements
   13                          | Statement .

    error    shift, and go to state 1
    CHAR     shift, and go to state 2
    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    INT      shift, and go to state 3
    SHORT    shift, and go to state 4
    DOUBLE   shift, and go to state 5
    RETURN   shift, and go to state 54
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    RBRACE  reduce using rule 13 (DeclarationsAndStatements)
    SEMI    reduce using rule 97 (empty)

    DeclarationsAndStatements  go to state 110
    Declaration                go to state 58
    TypeSpec                   go to state 59
    Statement                  go to state 60
    Compound_Stm               go to state 61
    Expr_Stm                   go to state 62
    OptionalExpr               go to state 63
    Select_Stm                 go to state 64
    Iter_Stm                   go to state 65
    Jump_Stm                   go to state 66
    PrimaryExpr                go to state 36
    FunctionCallExpr           go to state 37
    UnaryExpr                  go to state 38
    MultiplicativeExpr         go to state 39
    AdditiveExpr               go to state 40
    RelationalExpr             go to state 41
    EqualExpr                  go to state 42
    AndExpr                    go to state 43
    ExclusiveOrExpr            go to state 44
    InclusiveOrExpr            go to state 45
    LogicalAndExpr             go to state 46
    LogicalOrExpr              go to state 47
    AssignExpr                 go to state 67
    Expr                       go to state 68
    empty                      go to state 69


State 61

   35 Statement: Compound_Stm .

    $default  reduce using rule 35 (Statement)


State 62

   36 Statement: Expr_Stm .

    $default  reduce using rule 36 (Statement)


State 63

   45 Expr_Stm: OptionalExpr . SEMI

    SEMI  shift, and go to state 111


State 64

   37 Statement: Select_Stm .

    $default  reduce using rule 37 (Statement)


State 65

   38 Statement: Iter_Stm .

    $default  reduce using rule 38 (Statement)


State 66

   39 Statement: Jump_Stm .

    $default  reduce using rule 39 (Statement)


State 67

   95 Expr: AssignExpr .

    $default  reduce using rule 95 (Expr)


State 68

   47 OptionalExpr: Expr .
   96 Expr: Expr . COMMA AssignExpr

    COMMA  shift, and go to state 112

    $default  reduce using rule 47 (OptionalExpr)


State 69

   46 OptionalExpr: empty .

    $default  reduce using rule 46 (OptionalExpr)


State 70

   24 Declarator_: Declarator_ COMMA . Declarator

    ID  shift, and go to state 109

    Declarator  go to state 113


State 71

   22 Declaration: TypeSpec Declarator Declarator_ SEMI .

    $default  reduce using rule 22 (Declaration)


State 72

   57 PrimaryExpr: LPAR error . RPAR

    RPAR  shift, and go to state 114


State 73

   56 PrimaryExpr: LPAR Expr . RPAR
   96 Expr: Expr . COMMA AssignExpr

    COMMA  shift, and go to state 112
    RPAR   shift, and go to state 115


State 74

   66 UnaryExpr: MINUS UnaryExpr .

    $default  reduce using rule 66 (UnaryExpr)


State 75

   67 UnaryExpr: NOT UnaryExpr .

    $default  reduce using rule 67 (UnaryExpr)


State 76

   65 UnaryExpr: PLUS UnaryExpr .

    $default  reduce using rule 65 (UnaryExpr)


State 77

   61 FunctionCallExpr: ID LPAR . ArgExpr RPAR
   62                 | ID LPAR . RPAR
   63                 | ID LPAR . error RPAR

    error    shift, and go to state 116
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    RPAR     shift, and go to state 117
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    ArgExpr             go to state 118
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 119


State 78

   69 MultiplicativeExpr: MultiplicativeExpr MUL . UnaryExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr       go to state 36
    FunctionCallExpr  go to state 37
    UnaryExpr         go to state 120


State 79

   70 MultiplicativeExpr: MultiplicativeExpr DIV . UnaryExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr       go to state 36
    FunctionCallExpr  go to state 37
    UnaryExpr         go to state 121


State 80

   71 MultiplicativeExpr: MultiplicativeExpr MOD . UnaryExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr       go to state 36
    FunctionCallExpr  go to state 37
    UnaryExpr         go to state 122


State 81

   74 AdditiveExpr: AdditiveExpr MINUS . MultiplicativeExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 123


State 82

   73 AdditiveExpr: AdditiveExpr PLUS . MultiplicativeExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 124


State 83

   79 RelationalExpr: RelationalExpr GE . AdditiveExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 125


State 84

   77 RelationalExpr: RelationalExpr GT . AdditiveExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 126


State 85

   78 RelationalExpr: RelationalExpr LE . AdditiveExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 127


State 86

   76 RelationalExpr: RelationalExpr LT . AdditiveExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 128


State 87

   81 EqualExpr: EqualExpr EQ . RelationalExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 129


State 88

   82 EqualExpr: EqualExpr NE . RelationalExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 130


State 89

   84 AndExpr: AndExpr BITWISEAND . EqualExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 131


State 90

   86 ExclusiveOrExpr: ExclusiveOrExpr BITWISEXOR . AndExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 132


State 91

   88 InclusiveOrExpr: InclusiveOrExpr BITWISEOR . ExclusiveOrExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 133


State 92

   90 LogicalAndExpr: LogicalAndExpr AND . InclusiveOrExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 134


State 93

   94 AssignExpr: LogicalOrExpr ASSIGN . AssignExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 135


State 94

   92 LogicalOrExpr: LogicalOrExpr OR . LogicalAndExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 136


State 95

   16 FunctionDeclarator: ID LPAR ParameterList RPAR .

    $default  reduce using rule 16 (FunctionDeclarator)


State 96

   17 ParameterList: ParameterDeclaration ParameterDeclaration_ .
   18 ParameterDeclaration_: ParameterDeclaration_ . COMMA ParameterDeclaration

    COMMA  shift, and go to state 137

    $default  reduce using rule 17 (ParameterList)


State 97

   19 ParameterDeclaration_: empty .

    $default  reduce using rule 19 (ParameterDeclaration_)


State 98

   21 ParameterDeclaration: TypeSpec ID .

    $default  reduce using rule 21 (ParameterDeclaration)


State 99

   50 Iter_Stm: WHILE LPAR . Expr RPAR StatementError

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 138


State 100

   48 Select_Stm: IF LPAR . Expr RPAR StatementError
   49           | IF LPAR . Expr RPAR StatementError ELSE StatementError

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 139


State 101

   51 Jump_Stm: RETURN OptionalExpr . SEMI

    SEMI  shift, and go to state 140


State 102

   33 StatementError: error . SEMI
   42 Compound_Stm: LBRACE error . RBRACE

    RBRACE  shift, and go to state 141
    SEMI    shift, and go to state 142


State 103

   40 Compound_Stm: LBRACE RBRACE .

    $default  reduce using rule 40 (Compound_Stm)


State 104

   43 BlockItemStm: StatementError . BlockItemStm
   44             | StatementError .

    error    shift, and go to state 143
    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    RETURN   shift, and go to state 54
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    RBRACE  reduce using rule 44 (BlockItemStm)
    SEMI    reduce using rule 97 (empty)

    StatementError      go to state 104
    Statement           go to state 105
    Compound_Stm        go to state 61
    BlockItemStm        go to state 144
    Expr_Stm            go to state 62
    OptionalExpr        go to state 63
    Select_Stm          go to state 64
    Iter_Stm            go to state 65
    Jump_Stm            go to state 66
    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 68
    empty               go to state 69


State 105

   34 StatementError: Statement .

    $default  reduce using rule 34 (StatementError)


State 106

   41 Compound_Stm: LBRACE BlockItemStm . RBRACE

    RBRACE  shift, and go to state 145


State 107

   10 FunctionBody: LBRACE DeclarationsAndStatements RBRACE .

    $default  reduce using rule 10 (FunctionBody)


State 108

   12 DeclarationsAndStatements: Declaration DeclarationsAndStatements .

    $default  reduce using rule 12 (DeclarationsAndStatements)


State 109

   26 Declarator: ID . ASSIGN AssignExpr
   27           | ID .

    ASSIGN  shift, and go to state 21

    $default  reduce using rule 27 (Declarator)


State 110

   11 DeclarationsAndStatements: Statement DeclarationsAndStatements .

    $default  reduce using rule 11 (DeclarationsAndStatements)


State 111

   45 Expr_Stm: OptionalExpr SEMI .

    $default  reduce using rule 45 (Expr_Stm)


State 112

   96 Expr: Expr COMMA . AssignExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 146


State 113

   24 Declarator_: Declarator_ COMMA Declarator .

    $default  reduce using rule 24 (Declarator_)


State 114

   57 PrimaryExpr: LPAR error RPAR .

    $default  reduce using rule 57 (PrimaryExpr)


State 115

   56 PrimaryExpr: LPAR Expr RPAR .

    $default  reduce using rule 56 (PrimaryExpr)


State 116

   63 FunctionCallExpr: ID LPAR error . RPAR

    RPAR  shift, and go to state 147


State 117

   62 FunctionCallExpr: ID LPAR RPAR .

    $default  reduce using rule 62 (FunctionCallExpr)


State 118

   59 ArgExpr: ArgExpr . COMMA AssignExpr
   61 FunctionCallExpr: ID LPAR ArgExpr . RPAR

    COMMA  shift, and go to state 148
    RPAR   shift, and go to state 149


State 119

   58 ArgExpr: AssignExpr .

    $default  reduce using rule 58 (ArgExpr)


State 120

   69 MultiplicativeExpr: MultiplicativeExpr MUL UnaryExpr .

    $default  reduce using rule 69 (MultiplicativeExpr)


State 121

   70 MultiplicativeExpr: MultiplicativeExpr DIV UnaryExpr .

    $default  reduce using rule 70 (MultiplicativeExpr)


State 122

   71 MultiplicativeExpr: MultiplicativeExpr MOD UnaryExpr .

    $default  reduce using rule 71 (MultiplicativeExpr)


State 123

   69 MultiplicativeExpr: MultiplicativeExpr . MUL UnaryExpr
   70                   | MultiplicativeExpr . DIV UnaryExpr
   71                   | MultiplicativeExpr . MOD UnaryExpr
   74 AdditiveExpr: AdditiveExpr MINUS MultiplicativeExpr .

    MUL  shift, and go to state 78
    DIV  shift, and go to state 79
    MOD  shift, and go to state 80

    $default  reduce using rule 74 (AdditiveExpr)


State 124

   69 MultiplicativeExpr: MultiplicativeExpr . MUL UnaryExpr
   70                   | MultiplicativeExpr . DIV UnaryExpr
   71                   | MultiplicativeExpr . MOD UnaryExpr
   73 AdditiveExpr: AdditiveExpr PLUS MultiplicativeExpr .

    MUL  shift, and go to state 78
    DIV  shift, and go to state 79
    MOD  shift, and go to state 80

    $default  reduce using rule 73 (AdditiveExpr)


State 125

   73 AdditiveExpr: AdditiveExpr . PLUS MultiplicativeExpr
   74             | AdditiveExpr . MINUS MultiplicativeExpr
   79 RelationalExpr: RelationalExpr GE AdditiveExpr .

    MINUS  shift, and go to state 81
    PLUS   shift, and go to state 82

    $default  reduce using rule 79 (RelationalExpr)


State 126

   73 AdditiveExpr: AdditiveExpr . PLUS MultiplicativeExpr
   74             | AdditiveExpr . MINUS MultiplicativeExpr
   77 RelationalExpr: RelationalExpr GT AdditiveExpr .

    MINUS  shift, and go to state 81
    PLUS   shift, and go to state 82

    $default  reduce using rule 77 (RelationalExpr)


State 127

   73 AdditiveExpr: AdditiveExpr . PLUS MultiplicativeExpr
   74             | AdditiveExpr . MINUS MultiplicativeExpr
   78 RelationalExpr: RelationalExpr LE AdditiveExpr .

    MINUS  shift, and go to state 81
    PLUS   shift, and go to state 82

    $default  reduce using rule 78 (RelationalExpr)


State 128

   73 AdditiveExpr: AdditiveExpr . PLUS MultiplicativeExpr
   74             | AdditiveExpr . MINUS MultiplicativeExpr
   76 RelationalExpr: RelationalExpr LT AdditiveExpr .

    MINUS  shift, and go to state 81
    PLUS   shift, and go to state 82

    $default  reduce using rule 76 (RelationalExpr)


State 129

   76 RelationalExpr: RelationalExpr . LT AdditiveExpr
   77               | RelationalExpr . GT AdditiveExpr
   78               | RelationalExpr . LE AdditiveExpr
   79               | RelationalExpr . GE AdditiveExpr
   81 EqualExpr: EqualExpr EQ RelationalExpr .

    GE  shift, and go to state 83
    GT  shift, and go to state 84
    LE  shift, and go to state 85
    LT  shift, and go to state 86

    $default  reduce using rule 81 (EqualExpr)


State 130

   76 RelationalExpr: RelationalExpr . LT AdditiveExpr
   77               | RelationalExpr . GT AdditiveExpr
   78               | RelationalExpr . LE AdditiveExpr
   79               | RelationalExpr . GE AdditiveExpr
   82 EqualExpr: EqualExpr NE RelationalExpr .

    GE  shift, and go to state 83
    GT  shift, and go to state 84
    LE  shift, and go to state 85
    LT  shift, and go to state 86

    $default  reduce using rule 82 (EqualExpr)


State 131

   81 EqualExpr: EqualExpr . EQ RelationalExpr
   82          | EqualExpr . NE RelationalExpr
   84 AndExpr: AndExpr BITWISEAND EqualExpr .

    EQ  shift, and go to state 87
    NE  shift, and go to state 88

    $default  reduce using rule 84 (AndExpr)


State 132

   84 AndExpr: AndExpr . BITWISEAND EqualExpr
   86 ExclusiveOrExpr: ExclusiveOrExpr BITWISEXOR AndExpr .

    BITWISEAND  shift, and go to state 89

    $default  reduce using rule 86 (ExclusiveOrExpr)


State 133

   86 ExclusiveOrExpr: ExclusiveOrExpr . BITWISEXOR AndExpr
   88 InclusiveOrExpr: InclusiveOrExpr BITWISEOR ExclusiveOrExpr .

    BITWISEXOR  shift, and go to state 90

    $default  reduce using rule 88 (InclusiveOrExpr)


State 134

   88 InclusiveOrExpr: InclusiveOrExpr . BITWISEOR ExclusiveOrExpr
   90 LogicalAndExpr: LogicalAndExpr AND InclusiveOrExpr .

    BITWISEOR  shift, and go to state 91

    $default  reduce using rule 90 (LogicalAndExpr)


State 135

   94 AssignExpr: LogicalOrExpr ASSIGN AssignExpr .

    $default  reduce using rule 94 (AssignExpr)


State 136

   90 LogicalAndExpr: LogicalAndExpr . AND InclusiveOrExpr
   92 LogicalOrExpr: LogicalOrExpr OR LogicalAndExpr .

    AND  shift, and go to state 92

    $default  reduce using rule 92 (LogicalOrExpr)


State 137

   18 ParameterDeclaration_: ParameterDeclaration_ COMMA . ParameterDeclaration

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    ParameterDeclaration  go to state 150
    TypeSpec              go to state 51


State 138

   50 Iter_Stm: WHILE LPAR Expr . RPAR StatementError
   96 Expr: Expr . COMMA AssignExpr

    COMMA  shift, and go to state 112
    RPAR   shift, and go to state 151


State 139

   48 Select_Stm: IF LPAR Expr . RPAR StatementError
   49           | IF LPAR Expr . RPAR StatementError ELSE StatementError
   96 Expr: Expr . COMMA AssignExpr

    COMMA  shift, and go to state 112
    RPAR   shift, and go to state 152


State 140

   51 Jump_Stm: RETURN OptionalExpr SEMI .

    $default  reduce using rule 51 (Jump_Stm)


State 141

   42 Compound_Stm: LBRACE error RBRACE .

    $default  reduce using rule 42 (Compound_Stm)


State 142

   33 StatementError: error SEMI .

    $default  reduce using rule 33 (StatementError)


State 143

   33 StatementError: error . SEMI

    SEMI  shift, and go to state 142


State 144

   43 BlockItemStm: StatementError BlockItemStm .

    $default  reduce using rule 43 (BlockItemStm)


State 145

   41 Compound_Stm: LBRACE BlockItemStm RBRACE .

    $default  reduce using rule 41 (Compound_Stm)


State 146

   96 Expr: Expr COMMA AssignExpr .

    $default  reduce using rule 96 (Expr)


State 147

   63 FunctionCallExpr: ID LPAR error RPAR .

    $default  reduce using rule 63 (FunctionCallExpr)


State 148

   59 ArgExpr: ArgExpr COMMA . AssignExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 153


State 149

   61 FunctionCallExpr: ID LPAR ArgExpr RPAR .

    $default  reduce using rule 61 (FunctionCallExpr)


State 150

   18 ParameterDeclaration_: ParameterDeclaration_ COMMA ParameterDeclaration .

    $default  reduce using rule 18 (ParameterDeclaration_)


State 151

   50 Iter_Stm: WHILE LPAR Expr RPAR . StatementError

    error    shift, and go to state 143
    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    RETURN   shift, and go to state 54
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    SEMI  reduce using rule 97 (empty)

    StatementError      go to state 154
    Statement           go to state 105
    Compound_Stm        go to state 61
    Expr_Stm            go to state 62
    OptionalExpr        go to state 63
    Select_Stm          go to state 64
    Iter_Stm            go to state 65
    Jump_Stm            go to state 66
    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 68
    empty               go to state 69


State 152

   48 Select_Stm: IF LPAR Expr RPAR . StatementError
   49           | IF LPAR Expr RPAR . StatementError ELSE StatementError

    error    shift, and go to state 143
    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    RETURN   shift, and go to state 54
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    SEMI  reduce using rule 97 (empty)

    StatementError      go to state 155
    Statement           go to state 105
    Compound_Stm        go to state 61
    Expr_Stm            go to state 62
    OptionalExpr        go to state 63
    Select_Stm          go to state 64
    Iter_Stm            go to state 65
    Jump_Stm            go to state 66
    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 68
    empty               go to state 69


State 153

   59 ArgExpr: ArgExpr COMMA AssignExpr .

    $default  reduce using rule 59 (ArgExpr)


State 154

   50 Iter_Stm: WHILE LPAR Expr RPAR StatementError .

    $default  reduce using rule 50 (Iter_Stm)


State 155

   48 Select_Stm: IF LPAR Expr RPAR StatementError .
   49           | IF LPAR Expr RPAR StatementError . ELSE StatementError

    ELSE  shift, and go to state 156

    $default  reduce using rule 48 (Select_Stm)


State 156

   49 Select_Stm: IF LPAR Expr RPAR StatementError ELSE . StatementError

    error    shift, and go to state 143
    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    RETURN   shift, and go to state 54
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    SEMI  reduce using rule 97 (empty)

    StatementError      go to state 157
    Statement           go to state 105
    Compound_Stm        go to state 61
    Expr_Stm            go to state 62
    OptionalExpr        go to state 63
    Select_Stm          go to state 64
    Iter_Stm            go to state 65
    Jump_Stm            go to state 66
    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 68
    empty               go to state 69


State 157

   49 Select_Stm: IF LPAR Expr RPAR StatementError ELSE StatementError .

    $default  reduce using rule 49 (Select_Stm)
