Terminals unused in grammar

   RESERVED


State 13 conflicts: 1 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: FunctionsAndDeclarations

    2 PrimaryExpr: ID
    3            | INTLIT
    4            | CHRLIT
    5            | REALLIT
    6            | LPAR Expr RPAR
    7            | LPAR error RPAR

    8 FunctionsAndDeclarations: FunctionDefinition
    9                         | FunctionDeclaration
   10                         | Declaration
   11                         | FunctionDefinition FunctionsAndDeclarations
   12                         | FunctionDeclaration FunctionsAndDeclarations
   13                         | Declaration FunctionsAndDeclarations
   14                         | error SEMI

   15 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

   16 FunctionBody: LBRACE RBRACE
   17             | LBRACE DeclarationsAndStatements RBRACE

   18 DeclarationsAndStatements: Statement DeclarationsAndStatements
   19                          | Declaration DeclarationsAndStatements
   20                          | Statement
   21                          | Declaration

   22 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI
   23                    | error SEMI

   24 FunctionDeclarator: ID LPAR ParameterList RPAR

   25 ParameterList: ParameterDeclaration ParameterDeclaration_

   26 ParameterDeclaration_: ParameterDeclaration_ COMMA ParameterDeclaration
   27                      | empty

   28 ParameterDeclaration: TypeSpec
   29                     | TypeSpec ID

   30 Declaration: TypeSpec Declarator Declarator_ SEMI

   31 Declarator_: Declarator_ COMMA Declarator
   32            | empty

   33 Declarator: ID ASSIGN AssignExpr
   34           | ID

   35 TypeSpec: CHAR
   36         | INT
   37         | VOID
   38         | SHORT
   39         | DOUBLE

   40 Statement: Compound_Stm
   41          | Expr_Stm
   42          | Select_Stm
   43          | Iter_Stm
   44          | Jump_Stm

   45 Compound_Stm: LBRACE RBRACE
   46             | LBRACE BlockItemStm RBRACE
   47             | LBRACE error RBRACE

   48 BlockItemStm: Statement BlockItemStm
   49             | Statement

   50 Expr_Stm: SEMI
   51         | Expr SEMI

   52 Select_Stm: IF LPAR Expr RPAR Statement
   53           | IF LPAR Expr RPAR Statement ELSE Statement

   54 Iter_Stm: WHILE LPAR Expr RPAR Statement

   55 Jump_Stm: RETURN SEMI
   56         | RETURN Expr SEMI

   57 ArgExpr: AssignExpr
   58        | ArgExpr COMMA AssignExpr

   59 FunctionCallExpr: PrimaryExpr
   60                 | ID LPAR ArgExpr RPAR
   61                 | ID LPAR RPAR
   62                 | ID LPAR error RPAR

   63 UnaryExpr: FunctionCallExpr
   64          | PLUS UnaryExpr
   65          | MINUS UnaryExpr
   66          | NOT UnaryExpr

   67 MultiplicativeExpr: UnaryExpr
   68                   | MultiplicativeExpr MUL PrimaryExpr
   69                   | MultiplicativeExpr DIV PrimaryExpr
   70                   | MultiplicativeExpr MOD PrimaryExpr

   71 AdditiveExpr: MultiplicativeExpr
   72             | AdditiveExpr PLUS MultiplicativeExpr
   73             | AdditiveExpr MINUS MultiplicativeExpr

   74 RelationalExpr: AdditiveExpr
   75               | RelationalExpr LT AdditiveExpr
   76               | RelationalExpr GT AdditiveExpr
   77               | RelationalExpr LE AdditiveExpr
   78               | RelationalExpr GE AdditiveExpr

   79 EqualExpr: RelationalExpr
   80          | EqualExpr EQ RelationalExpr
   81          | EqualExpr NE RelationalExpr

   82 AndExpr: EqualExpr
   83        | AndExpr BITWISEAND EqualExpr

   84 ExclusiveOrExpr: AndExpr
   85                | ExclusiveOrExpr BITWISEXOR AndExpr

   86 InclusiveOrExpr: ExclusiveOrExpr
   87                | InclusiveOrExpr BITWISEOR ExclusiveOrExpr

   88 LogicalAndExpr: InclusiveOrExpr
   89               | LogicalAndExpr AND InclusiveOrExpr

   90 LogicalOrExpr: LogicalAndExpr
   91              | LogicalOrExpr OR LogicalAndExpr

   92 AssignExpr: LogicalOrExpr
   93           | UnaryExpr ASSIGN AssignExpr

   94 Expr: AssignExpr
   95     | Expr COMMA AssignExpr

   96 empty: %empty


Terminals, with rules where they appear

$end (0) 0
error (256) 7 14 23 47 62
CHAR (258) 35
ELSE (259) 53
WHILE (260) 54
IF (261) 52 53
INT (262) 36
SHORT (263) 38
DOUBLE (264) 39
RETURN (265) 55 56
VOID (266) 37
BITWISEAND (267) 83
BITWISEOR (268) 87
BITWISEXOR (269) 85
AND (270) 89
ASSIGN (271) 33 93
MUL (272) 68
COMMA (273) 26 31 58 95
DIV (274) 69
EQ (275) 80
GE (276) 78
GT (277) 76
LBRACE (278) 16 17 45 46 47
LE (279) 77
LPAR (280) 6 7 24 52 53 54 60 61 62
LT (281) 75
MINUS (282) 65 73
MOD (283) 70
NE (284) 81
NOT (285) 66
OR (286) 91
PLUS (287) 64 72
RBRACE (288) 16 17 45 46 47
RPAR (289) 6 7 24 52 53 54 60 61 62
SEMI (290) 14 22 23 30 50 51 55 56
ID (291) 2 24 29 33 34 60 61 62
CHRLIT (292) 4
REALLIT (293) 5
RESERVED (294)
INTLIT (295) 3
IFS (296)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
Program (43)
    on left: 1, on right: 0
PrimaryExpr (44)
    on left: 2 3 4 5 6 7, on right: 59 68 69 70
FunctionsAndDeclarations (45)
    on left: 8 9 10 11 12 13 14, on right: 1 11 12 13
FunctionDefinition (46)
    on left: 15, on right: 8 11
FunctionBody (47)
    on left: 16 17, on right: 15
DeclarationsAndStatements (48)
    on left: 18 19 20 21, on right: 17 18 19
FunctionDeclaration (49)
    on left: 22 23, on right: 9 12
FunctionDeclarator (50)
    on left: 24, on right: 15 22
ParameterList (51)
    on left: 25, on right: 24
ParameterDeclaration_ (52)
    on left: 26 27, on right: 25 26
ParameterDeclaration (53)
    on left: 28 29, on right: 25 26
Declaration (54)
    on left: 30, on right: 10 13 19 21
Declarator_ (55)
    on left: 31 32, on right: 30 31
Declarator (56)
    on left: 33 34, on right: 30 31
TypeSpec (57)
    on left: 35 36 37 38 39, on right: 15 22 28 29 30
Statement (58)
    on left: 40 41 42 43 44, on right: 18 20 48 49 52 53 54
Compound_Stm (59)
    on left: 45 46 47, on right: 40
BlockItemStm (60)
    on left: 48 49, on right: 46 48
Expr_Stm (61)
    on left: 50 51, on right: 41
Select_Stm (62)
    on left: 52 53, on right: 42
Iter_Stm (63)
    on left: 54, on right: 43
Jump_Stm (64)
    on left: 55 56, on right: 44
ArgExpr (65)
    on left: 57 58, on right: 58 60
FunctionCallExpr (66)
    on left: 59 60 61 62, on right: 63
UnaryExpr (67)
    on left: 63 64 65 66, on right: 64 65 66 67 93
MultiplicativeExpr (68)
    on left: 67 68 69 70, on right: 68 69 70 71 72 73
AdditiveExpr (69)
    on left: 71 72 73, on right: 72 73 74 75 76 77 78
RelationalExpr (70)
    on left: 74 75 76 77 78, on right: 75 76 77 78 79 80 81
EqualExpr (71)
    on left: 79 80 81, on right: 80 81 82 83
AndExpr (72)
    on left: 82 83, on right: 83 84 85
ExclusiveOrExpr (73)
    on left: 84 85, on right: 85 86 87
InclusiveOrExpr (74)
    on left: 86 87, on right: 87 88 89
LogicalAndExpr (75)
    on left: 88 89, on right: 89 90 91
LogicalOrExpr (76)
    on left: 90 91, on right: 91 92
AssignExpr (77)
    on left: 92 93, on right: 33 57 58 93 94 95
Expr (78)
    on left: 94 95, on right: 6 51 52 53 54 56 95
empty (79)
    on left: 96, on right: 27 32


State 0

    0 $accept: . Program $end

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    Program                   go to state 7
    FunctionsAndDeclarations  go to state 8
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 1

   14 FunctionsAndDeclarations: error . SEMI
   23 FunctionDeclaration: error . SEMI

    SEMI  shift, and go to state 13


State 2

   35 TypeSpec: CHAR .

    $default  reduce using rule 35 (TypeSpec)


State 3

   36 TypeSpec: INT .

    $default  reduce using rule 36 (TypeSpec)


State 4

   38 TypeSpec: SHORT .

    $default  reduce using rule 38 (TypeSpec)


State 5

   39 TypeSpec: DOUBLE .

    $default  reduce using rule 39 (TypeSpec)


State 6

   37 TypeSpec: VOID .

    $default  reduce using rule 37 (TypeSpec)


State 7

    0 $accept: Program . $end

    $end  shift, and go to state 14


State 8

    1 Program: FunctionsAndDeclarations .

    $default  reduce using rule 1 (Program)


State 9

    8 FunctionsAndDeclarations: FunctionDefinition .
   11                         | FunctionDefinition . FunctionsAndDeclarations

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 8 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 15
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 10

    9 FunctionsAndDeclarations: FunctionDeclaration .
   12                         | FunctionDeclaration . FunctionsAndDeclarations

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 9 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 16
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 11

   10 FunctionsAndDeclarations: Declaration .
   13                         | Declaration . FunctionsAndDeclarations

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 10 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 17
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 12

   15 FunctionDefinition: TypeSpec . FunctionDeclarator FunctionBody
   22 FunctionDeclaration: TypeSpec . FunctionDeclarator SEMI
   30 Declaration: TypeSpec . Declarator Declarator_ SEMI

    ID  shift, and go to state 18

    FunctionDeclarator  go to state 19
    Declarator          go to state 20


State 13

   14 FunctionsAndDeclarations: error SEMI .
   23 FunctionDeclaration: error SEMI .

    $end      reduce using rule 14 (FunctionsAndDeclarations)
    $end      [reduce using rule 23 (FunctionDeclaration)]
    $default  reduce using rule 23 (FunctionDeclaration)


State 14

    0 $accept: Program $end .

    $default  accept


State 15

   11 FunctionsAndDeclarations: FunctionDefinition FunctionsAndDeclarations .

    $default  reduce using rule 11 (FunctionsAndDeclarations)


State 16

   12 FunctionsAndDeclarations: FunctionDeclaration FunctionsAndDeclarations .

    $default  reduce using rule 12 (FunctionsAndDeclarations)


State 17

   13 FunctionsAndDeclarations: Declaration FunctionsAndDeclarations .

    $default  reduce using rule 13 (FunctionsAndDeclarations)


State 18

   24 FunctionDeclarator: ID . LPAR ParameterList RPAR
   33 Declarator: ID . ASSIGN AssignExpr
   34           | ID .

    ASSIGN  shift, and go to state 21
    LPAR    shift, and go to state 22

    $default  reduce using rule 34 (Declarator)


State 19

   15 FunctionDefinition: TypeSpec FunctionDeclarator . FunctionBody
   22 FunctionDeclaration: TypeSpec FunctionDeclarator . SEMI

    LBRACE  shift, and go to state 23
    SEMI    shift, and go to state 24

    FunctionBody  go to state 25


State 20

   30 Declaration: TypeSpec Declarator . Declarator_ SEMI

    $default  reduce using rule 96 (empty)

    Declarator_  go to state 26
    empty        go to state 27


State 21

   33 Declarator: ID ASSIGN . AssignExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 48


State 22

   24 FunctionDeclarator: ID LPAR . ParameterList RPAR

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    ParameterList         go to state 49
    ParameterDeclaration  go to state 50
    TypeSpec              go to state 51


State 23

   16 FunctionBody: LBRACE . RBRACE
   17             | LBRACE . DeclarationsAndStatements RBRACE

    CHAR     shift, and go to state 2
    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    INT      shift, and go to state 3
    SHORT    shift, and go to state 4
    DOUBLE   shift, and go to state 5
    RETURN   shift, and go to state 54
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    RBRACE   shift, and go to state 56
    SEMI     shift, and go to state 57
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr                go to state 36
    DeclarationsAndStatements  go to state 58
    Declaration                go to state 59
    TypeSpec                   go to state 60
    Statement                  go to state 61
    Compound_Stm               go to state 62
    Expr_Stm                   go to state 63
    Select_Stm                 go to state 64
    Iter_Stm                   go to state 65
    Jump_Stm                   go to state 66
    FunctionCallExpr           go to state 37
    UnaryExpr                  go to state 38
    MultiplicativeExpr         go to state 39
    AdditiveExpr               go to state 40
    RelationalExpr             go to state 41
    EqualExpr                  go to state 42
    AndExpr                    go to state 43
    ExclusiveOrExpr            go to state 44
    InclusiveOrExpr            go to state 45
    LogicalAndExpr             go to state 46
    LogicalOrExpr              go to state 47
    AssignExpr                 go to state 67
    Expr                       go to state 68


State 24

   22 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI .

    $default  reduce using rule 22 (FunctionDeclaration)


State 25

   15 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody .

    $default  reduce using rule 15 (FunctionDefinition)


State 26

   30 Declaration: TypeSpec Declarator Declarator_ . SEMI
   31 Declarator_: Declarator_ . COMMA Declarator

    COMMA  shift, and go to state 69
    SEMI   shift, and go to state 70


State 27

   32 Declarator_: empty .

    $default  reduce using rule 32 (Declarator_)


State 28

    6 PrimaryExpr: LPAR . Expr RPAR
    7            | LPAR . error RPAR

    error    shift, and go to state 71
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 72


State 29

   65 UnaryExpr: MINUS . UnaryExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr       go to state 36
    FunctionCallExpr  go to state 37
    UnaryExpr         go to state 73


State 30

   66 UnaryExpr: NOT . UnaryExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr       go to state 36
    FunctionCallExpr  go to state 37
    UnaryExpr         go to state 74


State 31

   64 UnaryExpr: PLUS . UnaryExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr       go to state 36
    FunctionCallExpr  go to state 37
    UnaryExpr         go to state 75


State 32

    2 PrimaryExpr: ID .
   60 FunctionCallExpr: ID . LPAR ArgExpr RPAR
   61                 | ID . LPAR RPAR
   62                 | ID . LPAR error RPAR

    LPAR  shift, and go to state 76

    $default  reduce using rule 2 (PrimaryExpr)


State 33

    4 PrimaryExpr: CHRLIT .

    $default  reduce using rule 4 (PrimaryExpr)


State 34

    5 PrimaryExpr: REALLIT .

    $default  reduce using rule 5 (PrimaryExpr)


State 35

    3 PrimaryExpr: INTLIT .

    $default  reduce using rule 3 (PrimaryExpr)


State 36

   59 FunctionCallExpr: PrimaryExpr .

    $default  reduce using rule 59 (FunctionCallExpr)


State 37

   63 UnaryExpr: FunctionCallExpr .

    $default  reduce using rule 63 (UnaryExpr)


State 38

   67 MultiplicativeExpr: UnaryExpr .
   93 AssignExpr: UnaryExpr . ASSIGN AssignExpr

    ASSIGN  shift, and go to state 77

    $default  reduce using rule 67 (MultiplicativeExpr)


State 39

   68 MultiplicativeExpr: MultiplicativeExpr . MUL PrimaryExpr
   69                   | MultiplicativeExpr . DIV PrimaryExpr
   70                   | MultiplicativeExpr . MOD PrimaryExpr
   71 AdditiveExpr: MultiplicativeExpr .

    MUL  shift, and go to state 78
    DIV  shift, and go to state 79
    MOD  shift, and go to state 80

    $default  reduce using rule 71 (AdditiveExpr)


State 40

   72 AdditiveExpr: AdditiveExpr . PLUS MultiplicativeExpr
   73             | AdditiveExpr . MINUS MultiplicativeExpr
   74 RelationalExpr: AdditiveExpr .

    MINUS  shift, and go to state 81
    PLUS   shift, and go to state 82

    $default  reduce using rule 74 (RelationalExpr)


State 41

   75 RelationalExpr: RelationalExpr . LT AdditiveExpr
   76               | RelationalExpr . GT AdditiveExpr
   77               | RelationalExpr . LE AdditiveExpr
   78               | RelationalExpr . GE AdditiveExpr
   79 EqualExpr: RelationalExpr .

    GE  shift, and go to state 83
    GT  shift, and go to state 84
    LE  shift, and go to state 85
    LT  shift, and go to state 86

    $default  reduce using rule 79 (EqualExpr)


State 42

   80 EqualExpr: EqualExpr . EQ RelationalExpr
   81          | EqualExpr . NE RelationalExpr
   82 AndExpr: EqualExpr .

    EQ  shift, and go to state 87
    NE  shift, and go to state 88

    $default  reduce using rule 82 (AndExpr)


State 43

   83 AndExpr: AndExpr . BITWISEAND EqualExpr
   84 ExclusiveOrExpr: AndExpr .

    BITWISEAND  shift, and go to state 89

    $default  reduce using rule 84 (ExclusiveOrExpr)


State 44

   85 ExclusiveOrExpr: ExclusiveOrExpr . BITWISEXOR AndExpr
   86 InclusiveOrExpr: ExclusiveOrExpr .

    BITWISEXOR  shift, and go to state 90

    $default  reduce using rule 86 (InclusiveOrExpr)


State 45

   87 InclusiveOrExpr: InclusiveOrExpr . BITWISEOR ExclusiveOrExpr
   88 LogicalAndExpr: InclusiveOrExpr .

    BITWISEOR  shift, and go to state 91

    $default  reduce using rule 88 (LogicalAndExpr)


State 46

   89 LogicalAndExpr: LogicalAndExpr . AND InclusiveOrExpr
   90 LogicalOrExpr: LogicalAndExpr .

    AND  shift, and go to state 92

    $default  reduce using rule 90 (LogicalOrExpr)


State 47

   91 LogicalOrExpr: LogicalOrExpr . OR LogicalAndExpr
   92 AssignExpr: LogicalOrExpr .

    OR  shift, and go to state 93

    $default  reduce using rule 92 (AssignExpr)


State 48

   33 Declarator: ID ASSIGN AssignExpr .

    $default  reduce using rule 33 (Declarator)


State 49

   24 FunctionDeclarator: ID LPAR ParameterList . RPAR

    RPAR  shift, and go to state 94


State 50

   25 ParameterList: ParameterDeclaration . ParameterDeclaration_

    $default  reduce using rule 96 (empty)

    ParameterDeclaration_  go to state 95
    empty                  go to state 96


State 51

   28 ParameterDeclaration: TypeSpec .
   29                     | TypeSpec . ID

    ID  shift, and go to state 97

    $default  reduce using rule 28 (ParameterDeclaration)


State 52

   54 Iter_Stm: WHILE . LPAR Expr RPAR Statement

    LPAR  shift, and go to state 98


State 53

   52 Select_Stm: IF . LPAR Expr RPAR Statement
   53           | IF . LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 99


State 54

   55 Jump_Stm: RETURN . SEMI
   56         | RETURN . Expr SEMI

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 100
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 101


State 55

   45 Compound_Stm: LBRACE . RBRACE
   46             | LBRACE . BlockItemStm RBRACE
   47             | LBRACE . error RBRACE

    error    shift, and go to state 102
    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    RETURN   shift, and go to state 54
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    RBRACE   shift, and go to state 103
    SEMI     shift, and go to state 57
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    Statement           go to state 104
    Compound_Stm        go to state 62
    BlockItemStm        go to state 105
    Expr_Stm            go to state 63
    Select_Stm          go to state 64
    Iter_Stm            go to state 65
    Jump_Stm            go to state 66
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 68


State 56

   16 FunctionBody: LBRACE RBRACE .

    $default  reduce using rule 16 (FunctionBody)


State 57

   50 Expr_Stm: SEMI .

    $default  reduce using rule 50 (Expr_Stm)


State 58

   17 FunctionBody: LBRACE DeclarationsAndStatements . RBRACE

    RBRACE  shift, and go to state 106


State 59

   19 DeclarationsAndStatements: Declaration . DeclarationsAndStatements
   21                          | Declaration .

    CHAR     shift, and go to state 2
    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    INT      shift, and go to state 3
    SHORT    shift, and go to state 4
    DOUBLE   shift, and go to state 5
    RETURN   shift, and go to state 54
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 57
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    $default  reduce using rule 21 (DeclarationsAndStatements)

    PrimaryExpr                go to state 36
    DeclarationsAndStatements  go to state 107
    Declaration                go to state 59
    TypeSpec                   go to state 60
    Statement                  go to state 61
    Compound_Stm               go to state 62
    Expr_Stm                   go to state 63
    Select_Stm                 go to state 64
    Iter_Stm                   go to state 65
    Jump_Stm                   go to state 66
    FunctionCallExpr           go to state 37
    UnaryExpr                  go to state 38
    MultiplicativeExpr         go to state 39
    AdditiveExpr               go to state 40
    RelationalExpr             go to state 41
    EqualExpr                  go to state 42
    AndExpr                    go to state 43
    ExclusiveOrExpr            go to state 44
    InclusiveOrExpr            go to state 45
    LogicalAndExpr             go to state 46
    LogicalOrExpr              go to state 47
    AssignExpr                 go to state 67
    Expr                       go to state 68


State 60

   30 Declaration: TypeSpec . Declarator Declarator_ SEMI

    ID  shift, and go to state 108

    Declarator  go to state 20


State 61

   18 DeclarationsAndStatements: Statement . DeclarationsAndStatements
   20                          | Statement .

    CHAR     shift, and go to state 2
    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    INT      shift, and go to state 3
    SHORT    shift, and go to state 4
    DOUBLE   shift, and go to state 5
    RETURN   shift, and go to state 54
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 57
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    $default  reduce using rule 20 (DeclarationsAndStatements)

    PrimaryExpr                go to state 36
    DeclarationsAndStatements  go to state 109
    Declaration                go to state 59
    TypeSpec                   go to state 60
    Statement                  go to state 61
    Compound_Stm               go to state 62
    Expr_Stm                   go to state 63
    Select_Stm                 go to state 64
    Iter_Stm                   go to state 65
    Jump_Stm                   go to state 66
    FunctionCallExpr           go to state 37
    UnaryExpr                  go to state 38
    MultiplicativeExpr         go to state 39
    AdditiveExpr               go to state 40
    RelationalExpr             go to state 41
    EqualExpr                  go to state 42
    AndExpr                    go to state 43
    ExclusiveOrExpr            go to state 44
    InclusiveOrExpr            go to state 45
    LogicalAndExpr             go to state 46
    LogicalOrExpr              go to state 47
    AssignExpr                 go to state 67
    Expr                       go to state 68


State 62

   40 Statement: Compound_Stm .

    $default  reduce using rule 40 (Statement)


State 63

   41 Statement: Expr_Stm .

    $default  reduce using rule 41 (Statement)


State 64

   42 Statement: Select_Stm .

    $default  reduce using rule 42 (Statement)


State 65

   43 Statement: Iter_Stm .

    $default  reduce using rule 43 (Statement)


State 66

   44 Statement: Jump_Stm .

    $default  reduce using rule 44 (Statement)


State 67

   94 Expr: AssignExpr .

    $default  reduce using rule 94 (Expr)


State 68

   51 Expr_Stm: Expr . SEMI
   95 Expr: Expr . COMMA AssignExpr

    COMMA  shift, and go to state 110
    SEMI   shift, and go to state 111


State 69

   31 Declarator_: Declarator_ COMMA . Declarator

    ID  shift, and go to state 108

    Declarator  go to state 112


State 70

   30 Declaration: TypeSpec Declarator Declarator_ SEMI .

    $default  reduce using rule 30 (Declaration)


State 71

    7 PrimaryExpr: LPAR error . RPAR

    RPAR  shift, and go to state 113


State 72

    6 PrimaryExpr: LPAR Expr . RPAR
   95 Expr: Expr . COMMA AssignExpr

    COMMA  shift, and go to state 110
    RPAR   shift, and go to state 114


State 73

   65 UnaryExpr: MINUS UnaryExpr .

    $default  reduce using rule 65 (UnaryExpr)


State 74

   66 UnaryExpr: NOT UnaryExpr .

    $default  reduce using rule 66 (UnaryExpr)


State 75

   64 UnaryExpr: PLUS UnaryExpr .

    $default  reduce using rule 64 (UnaryExpr)


State 76

   60 FunctionCallExpr: ID LPAR . ArgExpr RPAR
   61                 | ID LPAR . RPAR
   62                 | ID LPAR . error RPAR

    error    shift, and go to state 115
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    RPAR     shift, and go to state 116
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    ArgExpr             go to state 117
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 118


State 77

   93 AssignExpr: UnaryExpr ASSIGN . AssignExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 119


State 78

   68 MultiplicativeExpr: MultiplicativeExpr MUL . PrimaryExpr

    LPAR     shift, and go to state 28
    ID       shift, and go to state 120
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr  go to state 121


State 79

   69 MultiplicativeExpr: MultiplicativeExpr DIV . PrimaryExpr

    LPAR     shift, and go to state 28
    ID       shift, and go to state 120
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr  go to state 122


State 80

   70 MultiplicativeExpr: MultiplicativeExpr MOD . PrimaryExpr

    LPAR     shift, and go to state 28
    ID       shift, and go to state 120
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr  go to state 123


State 81

   73 AdditiveExpr: AdditiveExpr MINUS . MultiplicativeExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 124
    MultiplicativeExpr  go to state 125


State 82

   72 AdditiveExpr: AdditiveExpr PLUS . MultiplicativeExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 124
    MultiplicativeExpr  go to state 126


State 83

   78 RelationalExpr: RelationalExpr GE . AdditiveExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 124
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 127


State 84

   76 RelationalExpr: RelationalExpr GT . AdditiveExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 124
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 128


State 85

   77 RelationalExpr: RelationalExpr LE . AdditiveExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 124
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 129


State 86

   75 RelationalExpr: RelationalExpr LT . AdditiveExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 124
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 130


State 87

   80 EqualExpr: EqualExpr EQ . RelationalExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 124
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 131


State 88

   81 EqualExpr: EqualExpr NE . RelationalExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 124
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 132


State 89

   83 AndExpr: AndExpr BITWISEAND . EqualExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 124
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 133


State 90

   85 ExclusiveOrExpr: ExclusiveOrExpr BITWISEXOR . AndExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 124
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 134


State 91

   87 InclusiveOrExpr: InclusiveOrExpr BITWISEOR . ExclusiveOrExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 124
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 135


State 92

   89 LogicalAndExpr: LogicalAndExpr AND . InclusiveOrExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 124
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 136


State 93

   91 LogicalOrExpr: LogicalOrExpr OR . LogicalAndExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 124
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 137


State 94

   24 FunctionDeclarator: ID LPAR ParameterList RPAR .

    $default  reduce using rule 24 (FunctionDeclarator)


State 95

   25 ParameterList: ParameterDeclaration ParameterDeclaration_ .
   26 ParameterDeclaration_: ParameterDeclaration_ . COMMA ParameterDeclaration

    COMMA  shift, and go to state 138

    $default  reduce using rule 25 (ParameterList)


State 96

   27 ParameterDeclaration_: empty .

    $default  reduce using rule 27 (ParameterDeclaration_)


State 97

   29 ParameterDeclaration: TypeSpec ID .

    $default  reduce using rule 29 (ParameterDeclaration)


State 98

   54 Iter_Stm: WHILE LPAR . Expr RPAR Statement

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 139


State 99

   52 Select_Stm: IF LPAR . Expr RPAR Statement
   53           | IF LPAR . Expr RPAR Statement ELSE Statement

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 140


State 100

   55 Jump_Stm: RETURN SEMI .

    $default  reduce using rule 55 (Jump_Stm)


State 101

   56 Jump_Stm: RETURN Expr . SEMI
   95 Expr: Expr . COMMA AssignExpr

    COMMA  shift, and go to state 110
    SEMI   shift, and go to state 141


State 102

   47 Compound_Stm: LBRACE error . RBRACE

    RBRACE  shift, and go to state 142


State 103

   45 Compound_Stm: LBRACE RBRACE .

    $default  reduce using rule 45 (Compound_Stm)


State 104

   48 BlockItemStm: Statement . BlockItemStm
   49             | Statement .

    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    RETURN   shift, and go to state 54
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 57
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    $default  reduce using rule 49 (BlockItemStm)

    PrimaryExpr         go to state 36
    Statement           go to state 104
    Compound_Stm        go to state 62
    BlockItemStm        go to state 143
    Expr_Stm            go to state 63
    Select_Stm          go to state 64
    Iter_Stm            go to state 65
    Jump_Stm            go to state 66
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 68


State 105

   46 Compound_Stm: LBRACE BlockItemStm . RBRACE

    RBRACE  shift, and go to state 144


State 106

   17 FunctionBody: LBRACE DeclarationsAndStatements RBRACE .

    $default  reduce using rule 17 (FunctionBody)


State 107

   19 DeclarationsAndStatements: Declaration DeclarationsAndStatements .

    $default  reduce using rule 19 (DeclarationsAndStatements)


State 108

   33 Declarator: ID . ASSIGN AssignExpr
   34           | ID .

    ASSIGN  shift, and go to state 21

    $default  reduce using rule 34 (Declarator)


State 109

   18 DeclarationsAndStatements: Statement DeclarationsAndStatements .

    $default  reduce using rule 18 (DeclarationsAndStatements)


State 110

   95 Expr: Expr COMMA . AssignExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 145


State 111

   51 Expr_Stm: Expr SEMI .

    $default  reduce using rule 51 (Expr_Stm)


State 112

   31 Declarator_: Declarator_ COMMA Declarator .

    $default  reduce using rule 31 (Declarator_)


State 113

    7 PrimaryExpr: LPAR error RPAR .

    $default  reduce using rule 7 (PrimaryExpr)


State 114

    6 PrimaryExpr: LPAR Expr RPAR .

    $default  reduce using rule 6 (PrimaryExpr)


State 115

   62 FunctionCallExpr: ID LPAR error . RPAR

    RPAR  shift, and go to state 146


State 116

   61 FunctionCallExpr: ID LPAR RPAR .

    $default  reduce using rule 61 (FunctionCallExpr)


State 117

   58 ArgExpr: ArgExpr . COMMA AssignExpr
   60 FunctionCallExpr: ID LPAR ArgExpr . RPAR

    COMMA  shift, and go to state 147
    RPAR   shift, and go to state 148


State 118

   57 ArgExpr: AssignExpr .

    $default  reduce using rule 57 (ArgExpr)


State 119

   93 AssignExpr: UnaryExpr ASSIGN AssignExpr .

    $default  reduce using rule 93 (AssignExpr)


State 120

    2 PrimaryExpr: ID .

    $default  reduce using rule 2 (PrimaryExpr)


State 121

   68 MultiplicativeExpr: MultiplicativeExpr MUL PrimaryExpr .

    $default  reduce using rule 68 (MultiplicativeExpr)


State 122

   69 MultiplicativeExpr: MultiplicativeExpr DIV PrimaryExpr .

    $default  reduce using rule 69 (MultiplicativeExpr)


State 123

   70 MultiplicativeExpr: MultiplicativeExpr MOD PrimaryExpr .

    $default  reduce using rule 70 (MultiplicativeExpr)


State 124

   67 MultiplicativeExpr: UnaryExpr .

    $default  reduce using rule 67 (MultiplicativeExpr)


State 125

   68 MultiplicativeExpr: MultiplicativeExpr . MUL PrimaryExpr
   69                   | MultiplicativeExpr . DIV PrimaryExpr
   70                   | MultiplicativeExpr . MOD PrimaryExpr
   73 AdditiveExpr: AdditiveExpr MINUS MultiplicativeExpr .

    MUL  shift, and go to state 78
    DIV  shift, and go to state 79
    MOD  shift, and go to state 80

    $default  reduce using rule 73 (AdditiveExpr)


State 126

   68 MultiplicativeExpr: MultiplicativeExpr . MUL PrimaryExpr
   69                   | MultiplicativeExpr . DIV PrimaryExpr
   70                   | MultiplicativeExpr . MOD PrimaryExpr
   72 AdditiveExpr: AdditiveExpr PLUS MultiplicativeExpr .

    MUL  shift, and go to state 78
    DIV  shift, and go to state 79
    MOD  shift, and go to state 80

    $default  reduce using rule 72 (AdditiveExpr)


State 127

   72 AdditiveExpr: AdditiveExpr . PLUS MultiplicativeExpr
   73             | AdditiveExpr . MINUS MultiplicativeExpr
   78 RelationalExpr: RelationalExpr GE AdditiveExpr .

    MINUS  shift, and go to state 81
    PLUS   shift, and go to state 82

    $default  reduce using rule 78 (RelationalExpr)


State 128

   72 AdditiveExpr: AdditiveExpr . PLUS MultiplicativeExpr
   73             | AdditiveExpr . MINUS MultiplicativeExpr
   76 RelationalExpr: RelationalExpr GT AdditiveExpr .

    MINUS  shift, and go to state 81
    PLUS   shift, and go to state 82

    $default  reduce using rule 76 (RelationalExpr)


State 129

   72 AdditiveExpr: AdditiveExpr . PLUS MultiplicativeExpr
   73             | AdditiveExpr . MINUS MultiplicativeExpr
   77 RelationalExpr: RelationalExpr LE AdditiveExpr .

    MINUS  shift, and go to state 81
    PLUS   shift, and go to state 82

    $default  reduce using rule 77 (RelationalExpr)


State 130

   72 AdditiveExpr: AdditiveExpr . PLUS MultiplicativeExpr
   73             | AdditiveExpr . MINUS MultiplicativeExpr
   75 RelationalExpr: RelationalExpr LT AdditiveExpr .

    MINUS  shift, and go to state 81
    PLUS   shift, and go to state 82

    $default  reduce using rule 75 (RelationalExpr)


State 131

   75 RelationalExpr: RelationalExpr . LT AdditiveExpr
   76               | RelationalExpr . GT AdditiveExpr
   77               | RelationalExpr . LE AdditiveExpr
   78               | RelationalExpr . GE AdditiveExpr
   80 EqualExpr: EqualExpr EQ RelationalExpr .

    GE  shift, and go to state 83
    GT  shift, and go to state 84
    LE  shift, and go to state 85
    LT  shift, and go to state 86

    $default  reduce using rule 80 (EqualExpr)


State 132

   75 RelationalExpr: RelationalExpr . LT AdditiveExpr
   76               | RelationalExpr . GT AdditiveExpr
   77               | RelationalExpr . LE AdditiveExpr
   78               | RelationalExpr . GE AdditiveExpr
   81 EqualExpr: EqualExpr NE RelationalExpr .

    GE  shift, and go to state 83
    GT  shift, and go to state 84
    LE  shift, and go to state 85
    LT  shift, and go to state 86

    $default  reduce using rule 81 (EqualExpr)


State 133

   80 EqualExpr: EqualExpr . EQ RelationalExpr
   81          | EqualExpr . NE RelationalExpr
   83 AndExpr: AndExpr BITWISEAND EqualExpr .

    EQ  shift, and go to state 87
    NE  shift, and go to state 88

    $default  reduce using rule 83 (AndExpr)


State 134

   83 AndExpr: AndExpr . BITWISEAND EqualExpr
   85 ExclusiveOrExpr: ExclusiveOrExpr BITWISEXOR AndExpr .

    BITWISEAND  shift, and go to state 89

    $default  reduce using rule 85 (ExclusiveOrExpr)


State 135

   85 ExclusiveOrExpr: ExclusiveOrExpr . BITWISEXOR AndExpr
   87 InclusiveOrExpr: InclusiveOrExpr BITWISEOR ExclusiveOrExpr .

    BITWISEXOR  shift, and go to state 90

    $default  reduce using rule 87 (InclusiveOrExpr)


State 136

   87 InclusiveOrExpr: InclusiveOrExpr . BITWISEOR ExclusiveOrExpr
   89 LogicalAndExpr: LogicalAndExpr AND InclusiveOrExpr .

    BITWISEOR  shift, and go to state 91

    $default  reduce using rule 89 (LogicalAndExpr)


State 137

   89 LogicalAndExpr: LogicalAndExpr . AND InclusiveOrExpr
   91 LogicalOrExpr: LogicalOrExpr OR LogicalAndExpr .

    AND  shift, and go to state 92

    $default  reduce using rule 91 (LogicalOrExpr)


State 138

   26 ParameterDeclaration_: ParameterDeclaration_ COMMA . ParameterDeclaration

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    ParameterDeclaration  go to state 149
    TypeSpec              go to state 51


State 139

   54 Iter_Stm: WHILE LPAR Expr . RPAR Statement
   95 Expr: Expr . COMMA AssignExpr

    COMMA  shift, and go to state 110
    RPAR   shift, and go to state 150


State 140

   52 Select_Stm: IF LPAR Expr . RPAR Statement
   53           | IF LPAR Expr . RPAR Statement ELSE Statement
   95 Expr: Expr . COMMA AssignExpr

    COMMA  shift, and go to state 110
    RPAR   shift, and go to state 151


State 141

   56 Jump_Stm: RETURN Expr SEMI .

    $default  reduce using rule 56 (Jump_Stm)


State 142

   47 Compound_Stm: LBRACE error RBRACE .

    $default  reduce using rule 47 (Compound_Stm)


State 143

   48 BlockItemStm: Statement BlockItemStm .

    $default  reduce using rule 48 (BlockItemStm)


State 144

   46 Compound_Stm: LBRACE BlockItemStm RBRACE .

    $default  reduce using rule 46 (Compound_Stm)


State 145

   95 Expr: Expr COMMA AssignExpr .

    $default  reduce using rule 95 (Expr)


State 146

   62 FunctionCallExpr: ID LPAR error RPAR .

    $default  reduce using rule 62 (FunctionCallExpr)


State 147

   58 ArgExpr: ArgExpr COMMA . AssignExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 152


State 148

   60 FunctionCallExpr: ID LPAR ArgExpr RPAR .

    $default  reduce using rule 60 (FunctionCallExpr)


State 149

   26 ParameterDeclaration_: ParameterDeclaration_ COMMA ParameterDeclaration .

    $default  reduce using rule 26 (ParameterDeclaration_)


State 150

   54 Iter_Stm: WHILE LPAR Expr RPAR . Statement

    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    RETURN   shift, and go to state 54
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 57
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    Statement           go to state 153
    Compound_Stm        go to state 62
    Expr_Stm            go to state 63
    Select_Stm          go to state 64
    Iter_Stm            go to state 65
    Jump_Stm            go to state 66
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 68


State 151

   52 Select_Stm: IF LPAR Expr RPAR . Statement
   53           | IF LPAR Expr RPAR . Statement ELSE Statement

    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    RETURN   shift, and go to state 54
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 57
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    Statement           go to state 154
    Compound_Stm        go to state 62
    Expr_Stm            go to state 63
    Select_Stm          go to state 64
    Iter_Stm            go to state 65
    Jump_Stm            go to state 66
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 68


State 152

   58 ArgExpr: ArgExpr COMMA AssignExpr .

    $default  reduce using rule 58 (ArgExpr)


State 153

   54 Iter_Stm: WHILE LPAR Expr RPAR Statement .

    $default  reduce using rule 54 (Iter_Stm)


State 154

   52 Select_Stm: IF LPAR Expr RPAR Statement .
   53           | IF LPAR Expr RPAR Statement . ELSE Statement

    ELSE  shift, and go to state 155

    $default  reduce using rule 52 (Select_Stm)


State 155

   53 Select_Stm: IF LPAR Expr RPAR Statement ELSE . Statement

    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    RETURN   shift, and go to state 54
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 57
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    Statement           go to state 156
    Compound_Stm        go to state 62
    Expr_Stm            go to state 63
    Select_Stm          go to state 64
    Iter_Stm            go to state 65
    Jump_Stm            go to state 66
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 68


State 156

   53 Select_Stm: IF LPAR Expr RPAR Statement ELSE Statement .

    $default  reduce using rule 53 (Select_Stm)
