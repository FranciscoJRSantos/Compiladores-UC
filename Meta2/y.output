Terminals unused in grammar

   RESERVED


Grammar

    0 $accept: Program $end

    1 Program: FunctionsAndDeclarations

    2 PrimaryExpr: ID
    3            | INTLIT
    4            | CHRLIT
    5            | REALLIT
    6            | LPAR Expr RPAR
    7            | LPAR error RPAR

    8 FunctionsAndDeclarations: FunctionDefinition
    9                         | FunctionDeclaration
   10                         | Declaration
   11                         | FunctionDefinition FunctionsAndDeclarations
   12                         | FunctionDeclaration FunctionsAndDeclarations
   13                         | Declaration FunctionsAndDeclarations

   14 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

   15 FunctionBody: LBRACE RBRACE
   16             | LBRACE DeclarationsAndStatements RBRACE

   17 DeclarationsAndStatements: Statement DeclarationsAndStatements
   18                          | Declaration DeclarationsAndStatements
   19                          | Statement
   20                          | Declaration

   21 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI

   22 FunctionDeclarator: ID LPAR ParameterList RPAR

   23 ParameterList: ParameterDeclaration ParameterDeclaration_

   24 ParameterDeclaration_: ParameterDeclaration_ COMMA ParameterDeclaration
   25                      | empty

   26 ParameterDeclaration: TypeSpec
   27                     | TypeSpec ID

   28 Declaration: TypeSpec Declarator Declarator_ SEMI
   29            | error SEMI

   30 Declarator_: Declarator_ COMMA Declarator
   31            | empty

   32 Declarator: ID ASSIGN AssignExpr
   33           | ID

   34 TypeSpec: CHAR
   35         | INT
   36         | VOID
   37         | SHORT
   38         | DOUBLE

   39 StatementError: error SEMI
   40               | Statement

   41 Statement: Compound_Stm
   42          | Expr_Stm
   43          | Select_Stm
   44          | Iter_Stm
   45          | Jump_Stm

   46 Compound_Stm: LBRACE RBRACE
   47             | LBRACE error RBRACE
   48             | LBRACE BlockItemStm RBRACE

   49 BlockItemStm: StatementError BlockItemStm
   50             | StatementError

   51 Expr_Stm: SEMI
   52         | Expr SEMI

   53 Select_Stm: IF LPAR Expr RPAR StatementError
   54           | IF LPAR Expr RPAR StatementError ELSE StatementError

   55 Iter_Stm: WHILE LPAR Expr RPAR StatementError

   56 Jump_Stm: RETURN SEMI
   57         | RETURN Expr SEMI

   58 ArgExpr: AssignExpr
   59        | ArgExpr COMMA AssignExpr

   60 FunctionCallExpr: PrimaryExpr
   61                 | ID LPAR ArgExpr RPAR
   62                 | ID LPAR RPAR
   63                 | ID LPAR error RPAR

   64 UnaryExpr: FunctionCallExpr
   65          | PLUS UnaryExpr
   66          | MINUS UnaryExpr
   67          | NOT UnaryExpr

   68 MultiplicativeExpr: UnaryExpr
   69                   | MultiplicativeExpr MUL PrimaryExpr
   70                   | MultiplicativeExpr DIV PrimaryExpr
   71                   | MultiplicativeExpr MOD PrimaryExpr

   72 AdditiveExpr: MultiplicativeExpr
   73             | AdditiveExpr PLUS MultiplicativeExpr
   74             | AdditiveExpr MINUS MultiplicativeExpr

   75 RelationalExpr: AdditiveExpr
   76               | RelationalExpr LT AdditiveExpr
   77               | RelationalExpr GT AdditiveExpr
   78               | RelationalExpr LE AdditiveExpr
   79               | RelationalExpr GE AdditiveExpr

   80 EqualExpr: RelationalExpr
   81          | EqualExpr EQ RelationalExpr
   82          | EqualExpr NE RelationalExpr

   83 AndExpr: EqualExpr
   84        | AndExpr BITWISEAND EqualExpr

   85 ExclusiveOrExpr: AndExpr
   86                | ExclusiveOrExpr BITWISEXOR AndExpr

   87 InclusiveOrExpr: ExclusiveOrExpr
   88                | InclusiveOrExpr BITWISEOR ExclusiveOrExpr

   89 LogicalAndExpr: InclusiveOrExpr
   90               | LogicalAndExpr AND InclusiveOrExpr

   91 LogicalOrExpr: LogicalAndExpr
   92              | LogicalOrExpr OR LogicalAndExpr

   93 AssignExpr: LogicalOrExpr
   94           | UnaryExpr ASSIGN AssignExpr

   95 Expr: AssignExpr
   96     | Expr COMMA AssignExpr

   97 empty: %empty


Terminals, with rules where they appear

$end (0) 0
error (256) 7 29 39 47 63
CHAR (258) 34
ELSE (259) 54
WHILE (260) 55
IF (261) 53 54
INT (262) 35
SHORT (263) 37
DOUBLE (264) 38
RETURN (265) 56 57
VOID (266) 36
BITWISEAND (267) 84
BITWISEOR (268) 88
BITWISEXOR (269) 86
AND (270) 90
ASSIGN (271) 32 94
MUL (272) 69
COMMA (273) 24 30 59 96
DIV (274) 70
EQ (275) 81
GE (276) 79
GT (277) 77
LBRACE (278) 15 16 46 47 48
LE (279) 78
LPAR (280) 6 7 22 53 54 55 61 62 63
LT (281) 76
MINUS (282) 66 74
MOD (283) 71
NE (284) 82
NOT (285) 67
OR (286) 92
PLUS (287) 65 73
RBRACE (288) 15 16 46 47 48
RPAR (289) 6 7 22 53 54 55 61 62 63
SEMI (290) 21 28 29 39 51 52 56 57
ID (291) 2 22 27 32 33 61 62 63
CHRLIT (292) 4
REALLIT (293) 5
RESERVED (294)
INTLIT (295) 3
IFS (296)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
Program (43)
    on left: 1, on right: 0
PrimaryExpr (44)
    on left: 2 3 4 5 6 7, on right: 60 69 70 71
FunctionsAndDeclarations (45)
    on left: 8 9 10 11 12 13, on right: 1 11 12 13
FunctionDefinition (46)
    on left: 14, on right: 8 11
FunctionBody (47)
    on left: 15 16, on right: 14
DeclarationsAndStatements (48)
    on left: 17 18 19 20, on right: 16 17 18
FunctionDeclaration (49)
    on left: 21, on right: 9 12
FunctionDeclarator (50)
    on left: 22, on right: 14 21
ParameterList (51)
    on left: 23, on right: 22
ParameterDeclaration_ (52)
    on left: 24 25, on right: 23 24
ParameterDeclaration (53)
    on left: 26 27, on right: 23 24
Declaration (54)
    on left: 28 29, on right: 10 13 18 20
Declarator_ (55)
    on left: 30 31, on right: 28 30
Declarator (56)
    on left: 32 33, on right: 28 30
TypeSpec (57)
    on left: 34 35 36 37 38, on right: 14 21 26 27 28
StatementError (58)
    on left: 39 40, on right: 49 50 53 54 55
Statement (59)
    on left: 41 42 43 44 45, on right: 17 19 40
Compound_Stm (60)
    on left: 46 47 48, on right: 41
BlockItemStm (61)
    on left: 49 50, on right: 48 49
Expr_Stm (62)
    on left: 51 52, on right: 42
Select_Stm (63)
    on left: 53 54, on right: 43
Iter_Stm (64)
    on left: 55, on right: 44
Jump_Stm (65)
    on left: 56 57, on right: 45
ArgExpr (66)
    on left: 58 59, on right: 59 61
FunctionCallExpr (67)
    on left: 60 61 62 63, on right: 64
UnaryExpr (68)
    on left: 64 65 66 67, on right: 65 66 67 68 94
MultiplicativeExpr (69)
    on left: 68 69 70 71, on right: 69 70 71 72 73 74
AdditiveExpr (70)
    on left: 72 73 74, on right: 73 74 75 76 77 78 79
RelationalExpr (71)
    on left: 75 76 77 78 79, on right: 76 77 78 79 80 81 82
EqualExpr (72)
    on left: 80 81 82, on right: 81 82 83 84
AndExpr (73)
    on left: 83 84, on right: 84 85 86
ExclusiveOrExpr (74)
    on left: 85 86, on right: 86 87 88
InclusiveOrExpr (75)
    on left: 87 88, on right: 88 89 90
LogicalAndExpr (76)
    on left: 89 90, on right: 90 91 92
LogicalOrExpr (77)
    on left: 91 92, on right: 92 93
AssignExpr (78)
    on left: 93 94, on right: 32 58 59 94 95 96
Expr (79)
    on left: 95 96, on right: 6 52 53 54 55 57 96
empty (80)
    on left: 97, on right: 25 31


State 0

    0 $accept: . Program $end

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    Program                   go to state 7
    FunctionsAndDeclarations  go to state 8
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 1

   29 Declaration: error . SEMI

    SEMI  shift, and go to state 13


State 2

   34 TypeSpec: CHAR .

    $default  reduce using rule 34 (TypeSpec)


State 3

   35 TypeSpec: INT .

    $default  reduce using rule 35 (TypeSpec)


State 4

   37 TypeSpec: SHORT .

    $default  reduce using rule 37 (TypeSpec)


State 5

   38 TypeSpec: DOUBLE .

    $default  reduce using rule 38 (TypeSpec)


State 6

   36 TypeSpec: VOID .

    $default  reduce using rule 36 (TypeSpec)


State 7

    0 $accept: Program . $end

    $end  shift, and go to state 14


State 8

    1 Program: FunctionsAndDeclarations .

    $default  reduce using rule 1 (Program)


State 9

    8 FunctionsAndDeclarations: FunctionDefinition .
   11                         | FunctionDefinition . FunctionsAndDeclarations

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 8 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 15
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 10

    9 FunctionsAndDeclarations: FunctionDeclaration .
   12                         | FunctionDeclaration . FunctionsAndDeclarations

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 9 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 16
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 11

   10 FunctionsAndDeclarations: Declaration .
   13                         | Declaration . FunctionsAndDeclarations

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 10 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 17
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 12

   14 FunctionDefinition: TypeSpec . FunctionDeclarator FunctionBody
   21 FunctionDeclaration: TypeSpec . FunctionDeclarator SEMI
   28 Declaration: TypeSpec . Declarator Declarator_ SEMI

    ID  shift, and go to state 18

    FunctionDeclarator  go to state 19
    Declarator          go to state 20


State 13

   29 Declaration: error SEMI .

    $default  reduce using rule 29 (Declaration)


State 14

    0 $accept: Program $end .

    $default  accept


State 15

   11 FunctionsAndDeclarations: FunctionDefinition FunctionsAndDeclarations .

    $default  reduce using rule 11 (FunctionsAndDeclarations)


State 16

   12 FunctionsAndDeclarations: FunctionDeclaration FunctionsAndDeclarations .

    $default  reduce using rule 12 (FunctionsAndDeclarations)


State 17

   13 FunctionsAndDeclarations: Declaration FunctionsAndDeclarations .

    $default  reduce using rule 13 (FunctionsAndDeclarations)


State 18

   22 FunctionDeclarator: ID . LPAR ParameterList RPAR
   32 Declarator: ID . ASSIGN AssignExpr
   33           | ID .

    ASSIGN  shift, and go to state 21
    LPAR    shift, and go to state 22

    $default  reduce using rule 33 (Declarator)


State 19

   14 FunctionDefinition: TypeSpec FunctionDeclarator . FunctionBody
   21 FunctionDeclaration: TypeSpec FunctionDeclarator . SEMI

    LBRACE  shift, and go to state 23
    SEMI    shift, and go to state 24

    FunctionBody  go to state 25


State 20

   28 Declaration: TypeSpec Declarator . Declarator_ SEMI

    $default  reduce using rule 97 (empty)

    Declarator_  go to state 26
    empty        go to state 27


State 21

   32 Declarator: ID ASSIGN . AssignExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 48


State 22

   22 FunctionDeclarator: ID LPAR . ParameterList RPAR

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    ParameterList         go to state 49
    ParameterDeclaration  go to state 50
    TypeSpec              go to state 51


State 23

   15 FunctionBody: LBRACE . RBRACE
   16             | LBRACE . DeclarationsAndStatements RBRACE

    error    shift, and go to state 1
    CHAR     shift, and go to state 2
    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    INT      shift, and go to state 3
    SHORT    shift, and go to state 4
    DOUBLE   shift, and go to state 5
    RETURN   shift, and go to state 54
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    RBRACE   shift, and go to state 56
    SEMI     shift, and go to state 57
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr                go to state 36
    DeclarationsAndStatements  go to state 58
    Declaration                go to state 59
    TypeSpec                   go to state 60
    Statement                  go to state 61
    Compound_Stm               go to state 62
    Expr_Stm                   go to state 63
    Select_Stm                 go to state 64
    Iter_Stm                   go to state 65
    Jump_Stm                   go to state 66
    FunctionCallExpr           go to state 37
    UnaryExpr                  go to state 38
    MultiplicativeExpr         go to state 39
    AdditiveExpr               go to state 40
    RelationalExpr             go to state 41
    EqualExpr                  go to state 42
    AndExpr                    go to state 43
    ExclusiveOrExpr            go to state 44
    InclusiveOrExpr            go to state 45
    LogicalAndExpr             go to state 46
    LogicalOrExpr              go to state 47
    AssignExpr                 go to state 67
    Expr                       go to state 68


State 24

   21 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI .

    $default  reduce using rule 21 (FunctionDeclaration)


State 25

   14 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody .

    $default  reduce using rule 14 (FunctionDefinition)


State 26

   28 Declaration: TypeSpec Declarator Declarator_ . SEMI
   30 Declarator_: Declarator_ . COMMA Declarator

    COMMA  shift, and go to state 69
    SEMI   shift, and go to state 70


State 27

   31 Declarator_: empty .

    $default  reduce using rule 31 (Declarator_)


State 28

    6 PrimaryExpr: LPAR . Expr RPAR
    7            | LPAR . error RPAR

    error    shift, and go to state 71
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 72


State 29

   66 UnaryExpr: MINUS . UnaryExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr       go to state 36
    FunctionCallExpr  go to state 37
    UnaryExpr         go to state 73


State 30

   67 UnaryExpr: NOT . UnaryExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr       go to state 36
    FunctionCallExpr  go to state 37
    UnaryExpr         go to state 74


State 31

   65 UnaryExpr: PLUS . UnaryExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr       go to state 36
    FunctionCallExpr  go to state 37
    UnaryExpr         go to state 75


State 32

    2 PrimaryExpr: ID .
   61 FunctionCallExpr: ID . LPAR ArgExpr RPAR
   62                 | ID . LPAR RPAR
   63                 | ID . LPAR error RPAR

    LPAR  shift, and go to state 76

    $default  reduce using rule 2 (PrimaryExpr)


State 33

    4 PrimaryExpr: CHRLIT .

    $default  reduce using rule 4 (PrimaryExpr)


State 34

    5 PrimaryExpr: REALLIT .

    $default  reduce using rule 5 (PrimaryExpr)


State 35

    3 PrimaryExpr: INTLIT .

    $default  reduce using rule 3 (PrimaryExpr)


State 36

   60 FunctionCallExpr: PrimaryExpr .

    $default  reduce using rule 60 (FunctionCallExpr)


State 37

   64 UnaryExpr: FunctionCallExpr .

    $default  reduce using rule 64 (UnaryExpr)


State 38

   68 MultiplicativeExpr: UnaryExpr .
   94 AssignExpr: UnaryExpr . ASSIGN AssignExpr

    ASSIGN  shift, and go to state 77

    $default  reduce using rule 68 (MultiplicativeExpr)


State 39

   69 MultiplicativeExpr: MultiplicativeExpr . MUL PrimaryExpr
   70                   | MultiplicativeExpr . DIV PrimaryExpr
   71                   | MultiplicativeExpr . MOD PrimaryExpr
   72 AdditiveExpr: MultiplicativeExpr .

    MUL  shift, and go to state 78
    DIV  shift, and go to state 79
    MOD  shift, and go to state 80

    $default  reduce using rule 72 (AdditiveExpr)


State 40

   73 AdditiveExpr: AdditiveExpr . PLUS MultiplicativeExpr
   74             | AdditiveExpr . MINUS MultiplicativeExpr
   75 RelationalExpr: AdditiveExpr .

    MINUS  shift, and go to state 81
    PLUS   shift, and go to state 82

    $default  reduce using rule 75 (RelationalExpr)


State 41

   76 RelationalExpr: RelationalExpr . LT AdditiveExpr
   77               | RelationalExpr . GT AdditiveExpr
   78               | RelationalExpr . LE AdditiveExpr
   79               | RelationalExpr . GE AdditiveExpr
   80 EqualExpr: RelationalExpr .

    GE  shift, and go to state 83
    GT  shift, and go to state 84
    LE  shift, and go to state 85
    LT  shift, and go to state 86

    $default  reduce using rule 80 (EqualExpr)


State 42

   81 EqualExpr: EqualExpr . EQ RelationalExpr
   82          | EqualExpr . NE RelationalExpr
   83 AndExpr: EqualExpr .

    EQ  shift, and go to state 87
    NE  shift, and go to state 88

    $default  reduce using rule 83 (AndExpr)


State 43

   84 AndExpr: AndExpr . BITWISEAND EqualExpr
   85 ExclusiveOrExpr: AndExpr .

    BITWISEAND  shift, and go to state 89

    $default  reduce using rule 85 (ExclusiveOrExpr)


State 44

   86 ExclusiveOrExpr: ExclusiveOrExpr . BITWISEXOR AndExpr
   87 InclusiveOrExpr: ExclusiveOrExpr .

    BITWISEXOR  shift, and go to state 90

    $default  reduce using rule 87 (InclusiveOrExpr)


State 45

   88 InclusiveOrExpr: InclusiveOrExpr . BITWISEOR ExclusiveOrExpr
   89 LogicalAndExpr: InclusiveOrExpr .

    BITWISEOR  shift, and go to state 91

    $default  reduce using rule 89 (LogicalAndExpr)


State 46

   90 LogicalAndExpr: LogicalAndExpr . AND InclusiveOrExpr
   91 LogicalOrExpr: LogicalAndExpr .

    AND  shift, and go to state 92

    $default  reduce using rule 91 (LogicalOrExpr)


State 47

   92 LogicalOrExpr: LogicalOrExpr . OR LogicalAndExpr
   93 AssignExpr: LogicalOrExpr .

    OR  shift, and go to state 93

    $default  reduce using rule 93 (AssignExpr)


State 48

   32 Declarator: ID ASSIGN AssignExpr .

    $default  reduce using rule 32 (Declarator)


State 49

   22 FunctionDeclarator: ID LPAR ParameterList . RPAR

    RPAR  shift, and go to state 94


State 50

   23 ParameterList: ParameterDeclaration . ParameterDeclaration_

    $default  reduce using rule 97 (empty)

    ParameterDeclaration_  go to state 95
    empty                  go to state 96


State 51

   26 ParameterDeclaration: TypeSpec .
   27                     | TypeSpec . ID

    ID  shift, and go to state 97

    $default  reduce using rule 26 (ParameterDeclaration)


State 52

   55 Iter_Stm: WHILE . LPAR Expr RPAR StatementError

    LPAR  shift, and go to state 98


State 53

   53 Select_Stm: IF . LPAR Expr RPAR StatementError
   54           | IF . LPAR Expr RPAR StatementError ELSE StatementError

    LPAR  shift, and go to state 99


State 54

   56 Jump_Stm: RETURN . SEMI
   57         | RETURN . Expr SEMI

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 100
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 101


State 55

   46 Compound_Stm: LBRACE . RBRACE
   47             | LBRACE . error RBRACE
   48             | LBRACE . BlockItemStm RBRACE

    error    shift, and go to state 102
    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    RETURN   shift, and go to state 54
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    RBRACE   shift, and go to state 103
    SEMI     shift, and go to state 57
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    StatementError      go to state 104
    Statement           go to state 105
    Compound_Stm        go to state 62
    BlockItemStm        go to state 106
    Expr_Stm            go to state 63
    Select_Stm          go to state 64
    Iter_Stm            go to state 65
    Jump_Stm            go to state 66
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 68


State 56

   15 FunctionBody: LBRACE RBRACE .

    $default  reduce using rule 15 (FunctionBody)


State 57

   51 Expr_Stm: SEMI .

    $default  reduce using rule 51 (Expr_Stm)


State 58

   16 FunctionBody: LBRACE DeclarationsAndStatements . RBRACE

    RBRACE  shift, and go to state 107


State 59

   18 DeclarationsAndStatements: Declaration . DeclarationsAndStatements
   20                          | Declaration .

    error    shift, and go to state 1
    CHAR     shift, and go to state 2
    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    INT      shift, and go to state 3
    SHORT    shift, and go to state 4
    DOUBLE   shift, and go to state 5
    RETURN   shift, and go to state 54
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 57
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    RBRACE  reduce using rule 20 (DeclarationsAndStatements)

    PrimaryExpr                go to state 36
    DeclarationsAndStatements  go to state 108
    Declaration                go to state 59
    TypeSpec                   go to state 60
    Statement                  go to state 61
    Compound_Stm               go to state 62
    Expr_Stm                   go to state 63
    Select_Stm                 go to state 64
    Iter_Stm                   go to state 65
    Jump_Stm                   go to state 66
    FunctionCallExpr           go to state 37
    UnaryExpr                  go to state 38
    MultiplicativeExpr         go to state 39
    AdditiveExpr               go to state 40
    RelationalExpr             go to state 41
    EqualExpr                  go to state 42
    AndExpr                    go to state 43
    ExclusiveOrExpr            go to state 44
    InclusiveOrExpr            go to state 45
    LogicalAndExpr             go to state 46
    LogicalOrExpr              go to state 47
    AssignExpr                 go to state 67
    Expr                       go to state 68


State 60

   28 Declaration: TypeSpec . Declarator Declarator_ SEMI

    ID  shift, and go to state 109

    Declarator  go to state 20


State 61

   17 DeclarationsAndStatements: Statement . DeclarationsAndStatements
   19                          | Statement .

    error    shift, and go to state 1
    CHAR     shift, and go to state 2
    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    INT      shift, and go to state 3
    SHORT    shift, and go to state 4
    DOUBLE   shift, and go to state 5
    RETURN   shift, and go to state 54
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 57
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    RBRACE  reduce using rule 19 (DeclarationsAndStatements)

    PrimaryExpr                go to state 36
    DeclarationsAndStatements  go to state 110
    Declaration                go to state 59
    TypeSpec                   go to state 60
    Statement                  go to state 61
    Compound_Stm               go to state 62
    Expr_Stm                   go to state 63
    Select_Stm                 go to state 64
    Iter_Stm                   go to state 65
    Jump_Stm                   go to state 66
    FunctionCallExpr           go to state 37
    UnaryExpr                  go to state 38
    MultiplicativeExpr         go to state 39
    AdditiveExpr               go to state 40
    RelationalExpr             go to state 41
    EqualExpr                  go to state 42
    AndExpr                    go to state 43
    ExclusiveOrExpr            go to state 44
    InclusiveOrExpr            go to state 45
    LogicalAndExpr             go to state 46
    LogicalOrExpr              go to state 47
    AssignExpr                 go to state 67
    Expr                       go to state 68


State 62

   41 Statement: Compound_Stm .

    $default  reduce using rule 41 (Statement)


State 63

   42 Statement: Expr_Stm .

    $default  reduce using rule 42 (Statement)


State 64

   43 Statement: Select_Stm .

    $default  reduce using rule 43 (Statement)


State 65

   44 Statement: Iter_Stm .

    $default  reduce using rule 44 (Statement)


State 66

   45 Statement: Jump_Stm .

    $default  reduce using rule 45 (Statement)


State 67

   95 Expr: AssignExpr .

    $default  reduce using rule 95 (Expr)


State 68

   52 Expr_Stm: Expr . SEMI
   96 Expr: Expr . COMMA AssignExpr

    COMMA  shift, and go to state 111
    SEMI   shift, and go to state 112


State 69

   30 Declarator_: Declarator_ COMMA . Declarator

    ID  shift, and go to state 109

    Declarator  go to state 113


State 70

   28 Declaration: TypeSpec Declarator Declarator_ SEMI .

    $default  reduce using rule 28 (Declaration)


State 71

    7 PrimaryExpr: LPAR error . RPAR

    RPAR  shift, and go to state 114


State 72

    6 PrimaryExpr: LPAR Expr . RPAR
   96 Expr: Expr . COMMA AssignExpr

    COMMA  shift, and go to state 111
    RPAR   shift, and go to state 115


State 73

   66 UnaryExpr: MINUS UnaryExpr .

    $default  reduce using rule 66 (UnaryExpr)


State 74

   67 UnaryExpr: NOT UnaryExpr .

    $default  reduce using rule 67 (UnaryExpr)


State 75

   65 UnaryExpr: PLUS UnaryExpr .

    $default  reduce using rule 65 (UnaryExpr)


State 76

   61 FunctionCallExpr: ID LPAR . ArgExpr RPAR
   62                 | ID LPAR . RPAR
   63                 | ID LPAR . error RPAR

    error    shift, and go to state 116
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    RPAR     shift, and go to state 117
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    ArgExpr             go to state 118
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 119


State 77

   94 AssignExpr: UnaryExpr ASSIGN . AssignExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 120


State 78

   69 MultiplicativeExpr: MultiplicativeExpr MUL . PrimaryExpr

    LPAR     shift, and go to state 28
    ID       shift, and go to state 121
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr  go to state 122


State 79

   70 MultiplicativeExpr: MultiplicativeExpr DIV . PrimaryExpr

    LPAR     shift, and go to state 28
    ID       shift, and go to state 121
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr  go to state 123


State 80

   71 MultiplicativeExpr: MultiplicativeExpr MOD . PrimaryExpr

    LPAR     shift, and go to state 28
    ID       shift, and go to state 121
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr  go to state 124


State 81

   74 AdditiveExpr: AdditiveExpr MINUS . MultiplicativeExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 125
    MultiplicativeExpr  go to state 126


State 82

   73 AdditiveExpr: AdditiveExpr PLUS . MultiplicativeExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 125
    MultiplicativeExpr  go to state 127


State 83

   79 RelationalExpr: RelationalExpr GE . AdditiveExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 125
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 128


State 84

   77 RelationalExpr: RelationalExpr GT . AdditiveExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 125
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 129


State 85

   78 RelationalExpr: RelationalExpr LE . AdditiveExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 125
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 130


State 86

   76 RelationalExpr: RelationalExpr LT . AdditiveExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 125
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 131


State 87

   81 EqualExpr: EqualExpr EQ . RelationalExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 125
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 132


State 88

   82 EqualExpr: EqualExpr NE . RelationalExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 125
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 133


State 89

   84 AndExpr: AndExpr BITWISEAND . EqualExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 125
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 134


State 90

   86 ExclusiveOrExpr: ExclusiveOrExpr BITWISEXOR . AndExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 125
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 135


State 91

   88 InclusiveOrExpr: InclusiveOrExpr BITWISEOR . ExclusiveOrExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 125
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 136


State 92

   90 LogicalAndExpr: LogicalAndExpr AND . InclusiveOrExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 125
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 137


State 93

   92 LogicalOrExpr: LogicalOrExpr OR . LogicalAndExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 125
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 138


State 94

   22 FunctionDeclarator: ID LPAR ParameterList RPAR .

    $default  reduce using rule 22 (FunctionDeclarator)


State 95

   23 ParameterList: ParameterDeclaration ParameterDeclaration_ .
   24 ParameterDeclaration_: ParameterDeclaration_ . COMMA ParameterDeclaration

    COMMA  shift, and go to state 139

    $default  reduce using rule 23 (ParameterList)


State 96

   25 ParameterDeclaration_: empty .

    $default  reduce using rule 25 (ParameterDeclaration_)


State 97

   27 ParameterDeclaration: TypeSpec ID .

    $default  reduce using rule 27 (ParameterDeclaration)


State 98

   55 Iter_Stm: WHILE LPAR . Expr RPAR StatementError

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 140


State 99

   53 Select_Stm: IF LPAR . Expr RPAR StatementError
   54           | IF LPAR . Expr RPAR StatementError ELSE StatementError

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 141


State 100

   56 Jump_Stm: RETURN SEMI .

    $default  reduce using rule 56 (Jump_Stm)


State 101

   57 Jump_Stm: RETURN Expr . SEMI
   96 Expr: Expr . COMMA AssignExpr

    COMMA  shift, and go to state 111
    SEMI   shift, and go to state 142


State 102

   39 StatementError: error . SEMI
   47 Compound_Stm: LBRACE error . RBRACE

    RBRACE  shift, and go to state 143
    SEMI    shift, and go to state 144


State 103

   46 Compound_Stm: LBRACE RBRACE .

    $default  reduce using rule 46 (Compound_Stm)


State 104

   49 BlockItemStm: StatementError . BlockItemStm
   50             | StatementError .

    error    shift, and go to state 145
    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    RETURN   shift, and go to state 54
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 57
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    RBRACE  reduce using rule 50 (BlockItemStm)

    PrimaryExpr         go to state 36
    StatementError      go to state 104
    Statement           go to state 105
    Compound_Stm        go to state 62
    BlockItemStm        go to state 146
    Expr_Stm            go to state 63
    Select_Stm          go to state 64
    Iter_Stm            go to state 65
    Jump_Stm            go to state 66
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 68


State 105

   40 StatementError: Statement .

    $default  reduce using rule 40 (StatementError)


State 106

   48 Compound_Stm: LBRACE BlockItemStm . RBRACE

    RBRACE  shift, and go to state 147


State 107

   16 FunctionBody: LBRACE DeclarationsAndStatements RBRACE .

    $default  reduce using rule 16 (FunctionBody)


State 108

   18 DeclarationsAndStatements: Declaration DeclarationsAndStatements .

    $default  reduce using rule 18 (DeclarationsAndStatements)


State 109

   32 Declarator: ID . ASSIGN AssignExpr
   33           | ID .

    ASSIGN  shift, and go to state 21

    $default  reduce using rule 33 (Declarator)


State 110

   17 DeclarationsAndStatements: Statement DeclarationsAndStatements .

    $default  reduce using rule 17 (DeclarationsAndStatements)


State 111

   96 Expr: Expr COMMA . AssignExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 148


State 112

   52 Expr_Stm: Expr SEMI .

    $default  reduce using rule 52 (Expr_Stm)


State 113

   30 Declarator_: Declarator_ COMMA Declarator .

    $default  reduce using rule 30 (Declarator_)


State 114

    7 PrimaryExpr: LPAR error RPAR .

    $default  reduce using rule 7 (PrimaryExpr)


State 115

    6 PrimaryExpr: LPAR Expr RPAR .

    $default  reduce using rule 6 (PrimaryExpr)


State 116

   63 FunctionCallExpr: ID LPAR error . RPAR

    RPAR  shift, and go to state 149


State 117

   62 FunctionCallExpr: ID LPAR RPAR .

    $default  reduce using rule 62 (FunctionCallExpr)


State 118

   59 ArgExpr: ArgExpr . COMMA AssignExpr
   61 FunctionCallExpr: ID LPAR ArgExpr . RPAR

    COMMA  shift, and go to state 150
    RPAR   shift, and go to state 151


State 119

   58 ArgExpr: AssignExpr .

    $default  reduce using rule 58 (ArgExpr)


State 120

   94 AssignExpr: UnaryExpr ASSIGN AssignExpr .

    $default  reduce using rule 94 (AssignExpr)


State 121

    2 PrimaryExpr: ID .

    $default  reduce using rule 2 (PrimaryExpr)


State 122

   69 MultiplicativeExpr: MultiplicativeExpr MUL PrimaryExpr .

    $default  reduce using rule 69 (MultiplicativeExpr)


State 123

   70 MultiplicativeExpr: MultiplicativeExpr DIV PrimaryExpr .

    $default  reduce using rule 70 (MultiplicativeExpr)


State 124

   71 MultiplicativeExpr: MultiplicativeExpr MOD PrimaryExpr .

    $default  reduce using rule 71 (MultiplicativeExpr)


State 125

   68 MultiplicativeExpr: UnaryExpr .

    $default  reduce using rule 68 (MultiplicativeExpr)


State 126

   69 MultiplicativeExpr: MultiplicativeExpr . MUL PrimaryExpr
   70                   | MultiplicativeExpr . DIV PrimaryExpr
   71                   | MultiplicativeExpr . MOD PrimaryExpr
   74 AdditiveExpr: AdditiveExpr MINUS MultiplicativeExpr .

    MUL  shift, and go to state 78
    DIV  shift, and go to state 79
    MOD  shift, and go to state 80

    $default  reduce using rule 74 (AdditiveExpr)


State 127

   69 MultiplicativeExpr: MultiplicativeExpr . MUL PrimaryExpr
   70                   | MultiplicativeExpr . DIV PrimaryExpr
   71                   | MultiplicativeExpr . MOD PrimaryExpr
   73 AdditiveExpr: AdditiveExpr PLUS MultiplicativeExpr .

    MUL  shift, and go to state 78
    DIV  shift, and go to state 79
    MOD  shift, and go to state 80

    $default  reduce using rule 73 (AdditiveExpr)


State 128

   73 AdditiveExpr: AdditiveExpr . PLUS MultiplicativeExpr
   74             | AdditiveExpr . MINUS MultiplicativeExpr
   79 RelationalExpr: RelationalExpr GE AdditiveExpr .

    MINUS  shift, and go to state 81
    PLUS   shift, and go to state 82

    $default  reduce using rule 79 (RelationalExpr)


State 129

   73 AdditiveExpr: AdditiveExpr . PLUS MultiplicativeExpr
   74             | AdditiveExpr . MINUS MultiplicativeExpr
   77 RelationalExpr: RelationalExpr GT AdditiveExpr .

    MINUS  shift, and go to state 81
    PLUS   shift, and go to state 82

    $default  reduce using rule 77 (RelationalExpr)


State 130

   73 AdditiveExpr: AdditiveExpr . PLUS MultiplicativeExpr
   74             | AdditiveExpr . MINUS MultiplicativeExpr
   78 RelationalExpr: RelationalExpr LE AdditiveExpr .

    MINUS  shift, and go to state 81
    PLUS   shift, and go to state 82

    $default  reduce using rule 78 (RelationalExpr)


State 131

   73 AdditiveExpr: AdditiveExpr . PLUS MultiplicativeExpr
   74             | AdditiveExpr . MINUS MultiplicativeExpr
   76 RelationalExpr: RelationalExpr LT AdditiveExpr .

    MINUS  shift, and go to state 81
    PLUS   shift, and go to state 82

    $default  reduce using rule 76 (RelationalExpr)


State 132

   76 RelationalExpr: RelationalExpr . LT AdditiveExpr
   77               | RelationalExpr . GT AdditiveExpr
   78               | RelationalExpr . LE AdditiveExpr
   79               | RelationalExpr . GE AdditiveExpr
   81 EqualExpr: EqualExpr EQ RelationalExpr .

    GE  shift, and go to state 83
    GT  shift, and go to state 84
    LE  shift, and go to state 85
    LT  shift, and go to state 86

    $default  reduce using rule 81 (EqualExpr)


State 133

   76 RelationalExpr: RelationalExpr . LT AdditiveExpr
   77               | RelationalExpr . GT AdditiveExpr
   78               | RelationalExpr . LE AdditiveExpr
   79               | RelationalExpr . GE AdditiveExpr
   82 EqualExpr: EqualExpr NE RelationalExpr .

    GE  shift, and go to state 83
    GT  shift, and go to state 84
    LE  shift, and go to state 85
    LT  shift, and go to state 86

    $default  reduce using rule 82 (EqualExpr)


State 134

   81 EqualExpr: EqualExpr . EQ RelationalExpr
   82          | EqualExpr . NE RelationalExpr
   84 AndExpr: AndExpr BITWISEAND EqualExpr .

    EQ  shift, and go to state 87
    NE  shift, and go to state 88

    $default  reduce using rule 84 (AndExpr)


State 135

   84 AndExpr: AndExpr . BITWISEAND EqualExpr
   86 ExclusiveOrExpr: ExclusiveOrExpr BITWISEXOR AndExpr .

    BITWISEAND  shift, and go to state 89

    $default  reduce using rule 86 (ExclusiveOrExpr)


State 136

   86 ExclusiveOrExpr: ExclusiveOrExpr . BITWISEXOR AndExpr
   88 InclusiveOrExpr: InclusiveOrExpr BITWISEOR ExclusiveOrExpr .

    BITWISEXOR  shift, and go to state 90

    $default  reduce using rule 88 (InclusiveOrExpr)


State 137

   88 InclusiveOrExpr: InclusiveOrExpr . BITWISEOR ExclusiveOrExpr
   90 LogicalAndExpr: LogicalAndExpr AND InclusiveOrExpr .

    BITWISEOR  shift, and go to state 91

    $default  reduce using rule 90 (LogicalAndExpr)


State 138

   90 LogicalAndExpr: LogicalAndExpr . AND InclusiveOrExpr
   92 LogicalOrExpr: LogicalOrExpr OR LogicalAndExpr .

    AND  shift, and go to state 92

    $default  reduce using rule 92 (LogicalOrExpr)


State 139

   24 ParameterDeclaration_: ParameterDeclaration_ COMMA . ParameterDeclaration

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    ParameterDeclaration  go to state 152
    TypeSpec              go to state 51


State 140

   55 Iter_Stm: WHILE LPAR Expr . RPAR StatementError
   96 Expr: Expr . COMMA AssignExpr

    COMMA  shift, and go to state 111
    RPAR   shift, and go to state 153


State 141

   53 Select_Stm: IF LPAR Expr . RPAR StatementError
   54           | IF LPAR Expr . RPAR StatementError ELSE StatementError
   96 Expr: Expr . COMMA AssignExpr

    COMMA  shift, and go to state 111
    RPAR   shift, and go to state 154


State 142

   57 Jump_Stm: RETURN Expr SEMI .

    $default  reduce using rule 57 (Jump_Stm)


State 143

   47 Compound_Stm: LBRACE error RBRACE .

    $default  reduce using rule 47 (Compound_Stm)


State 144

   39 StatementError: error SEMI .

    $default  reduce using rule 39 (StatementError)


State 145

   39 StatementError: error . SEMI

    SEMI  shift, and go to state 144


State 146

   49 BlockItemStm: StatementError BlockItemStm .

    $default  reduce using rule 49 (BlockItemStm)


State 147

   48 Compound_Stm: LBRACE BlockItemStm RBRACE .

    $default  reduce using rule 48 (Compound_Stm)


State 148

   96 Expr: Expr COMMA AssignExpr .

    $default  reduce using rule 96 (Expr)


State 149

   63 FunctionCallExpr: ID LPAR error RPAR .

    $default  reduce using rule 63 (FunctionCallExpr)


State 150

   59 ArgExpr: ArgExpr COMMA . AssignExpr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 155


State 151

   61 FunctionCallExpr: ID LPAR ArgExpr RPAR .

    $default  reduce using rule 61 (FunctionCallExpr)


State 152

   24 ParameterDeclaration_: ParameterDeclaration_ COMMA ParameterDeclaration .

    $default  reduce using rule 24 (ParameterDeclaration_)


State 153

   55 Iter_Stm: WHILE LPAR Expr RPAR . StatementError

    error    shift, and go to state 145
    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    RETURN   shift, and go to state 54
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 57
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    StatementError      go to state 156
    Statement           go to state 105
    Compound_Stm        go to state 62
    Expr_Stm            go to state 63
    Select_Stm          go to state 64
    Iter_Stm            go to state 65
    Jump_Stm            go to state 66
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 68


State 154

   53 Select_Stm: IF LPAR Expr RPAR . StatementError
   54           | IF LPAR Expr RPAR . StatementError ELSE StatementError

    error    shift, and go to state 145
    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    RETURN   shift, and go to state 54
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 57
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    StatementError      go to state 157
    Statement           go to state 105
    Compound_Stm        go to state 62
    Expr_Stm            go to state 63
    Select_Stm          go to state 64
    Iter_Stm            go to state 65
    Jump_Stm            go to state 66
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 68


State 155

   59 ArgExpr: ArgExpr COMMA AssignExpr .

    $default  reduce using rule 59 (ArgExpr)


State 156

   55 Iter_Stm: WHILE LPAR Expr RPAR StatementError .

    $default  reduce using rule 55 (Iter_Stm)


State 157

   53 Select_Stm: IF LPAR Expr RPAR StatementError .
   54           | IF LPAR Expr RPAR StatementError . ELSE StatementError

    ELSE  shift, and go to state 158

    $default  reduce using rule 53 (Select_Stm)


State 158

   54 Select_Stm: IF LPAR Expr RPAR StatementError ELSE . StatementError

    error    shift, and go to state 145
    WHILE    shift, and go to state 52
    IF       shift, and go to state 53
    RETURN   shift, and go to state 54
    LBRACE   shift, and go to state 55
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 57
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    PrimaryExpr         go to state 36
    StatementError      go to state 159
    Statement           go to state 105
    Compound_Stm        go to state 62
    Expr_Stm            go to state 63
    Select_Stm          go to state 64
    Iter_Stm            go to state 65
    Jump_Stm            go to state 66
    FunctionCallExpr    go to state 37
    UnaryExpr           go to state 38
    MultiplicativeExpr  go to state 39
    AdditiveExpr        go to state 40
    RelationalExpr      go to state 41
    EqualExpr           go to state 42
    AndExpr             go to state 43
    ExclusiveOrExpr     go to state 44
    InclusiveOrExpr     go to state 45
    LogicalAndExpr      go to state 46
    LogicalOrExpr       go to state 47
    AssignExpr          go to state 67
    Expr                go to state 68


State 159

   54 Select_Stm: IF LPAR Expr RPAR StatementError ELSE StatementError .

    $default  reduce using rule 54 (Select_Stm)
